version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
    type: controlplane # Defines the role of the machine within the cluster.
    token: i8kaka.70qqo5vg5hxz8dwi # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFuUHFHRXJlV1FiejBGZkZUVGZYMG9NQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5ERXhNakF5TXpFMU5USmFGdzB6TkRFeE1UZ3lNekUxTlRKYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBMmlITmw3ZFZvN2lQZGwrNlRjazUrRUlrODFKL1I0NVFCcjdUCjlMSVFuc1NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVWDVsR2JRQkFtcGs3VEZCSgpGSHEzbGFWd2lUb3dCUVlESzJWd0EwRUFvTHVTUlV2SkJpWkNiTkZpSmxtMi9hejFjTjYzZUVuazl6ZTRMb3huCjZrbUE3UmYrUjNadXRCRjVldTlGQmZJbDdCbVRVL0tua3J0ZFcwVXdLeFlsRFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJRXlqVHlZQnIrWDZaOXFSbmNlZlN2YXhNbXIxQmxjMUkxZWJKc01pc2VnbQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10

    # Used to provide additional options to the kubelet.
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.31.1 # The `image` field is an optional reference to an alternative kubelet image.
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value

        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true

        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider

        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network: {}
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.0/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.

    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.

    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.

    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true

    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.

    #       # # Wireguard specific configuration.

    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24

    #       # # Virtual (shared) IP address configuration.

    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.

    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1

    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld

    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.

    # Used to provide instructions for installations.
    install:
        disk: /dev/sda # The disk used for installations.
        image: ghcr.io/siderolabs/installer:v1.8.1 # Allows for supplying the image used to perform the installation.
        wipe: false # Indicates if the installation disk should be wiped at installation time.
        
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k

        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/

    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.

    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
        stableHostname: true # Enable stable default hostname.
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            enabled: true # Enable KubePrism support - will start local load balancing proxy.
            port: 7445 # KubePrism port.
        # Configures host DNS caching resolver.
        hostDNS:
            enabled: true # Enable host DNS caching resolver.
            forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
        
        # # Configure Talos API access from Kubernetes pods.
        # kubernetesTalosAPIAccess:
        #     enabled: true # Enable Talos API access from Kubernetes pods.
        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
        #     allowedRoles:
        #         - os:reader
        #     # The list of Kubernetes namespaces Talos API access is available from.
        #     allowedKubernetesNamespaces:
        #         - kube-system
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    
    # # Provides machine specific control plane configuration options.

    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.

    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # Used to partition, format and mount additional disks.

    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.

    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824

    # # Allows the addition of user specified files.

    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use

    # # The `env` field allows for the addition of environment variables.

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Used to configure the machine's time settings.

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

    # # Used to configure the machine's sysctls.

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # Used to configure the machine's sysfs.

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64

    #         # # Defines the encryption sector size.
    #         # blockSize: 4096

    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue

    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.

    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.

    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # Configures the node annotations for the machine.

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # Configures the node taints for the machine. Effect is optional.

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    id: aLrtzdfERYY7bc05B263VcOoRj6k15p3Q887goXlYvo= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: wSaHsUihjsdQuDm4wqR5P4mIThret7NnrKDPzVxfIS4= # Shared secret of cluster (base64 encoded random 32 bytes).
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://192.168.101.100:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: talos # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        dnsDomain: cluster.local # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        
        # # The CNI used.
        # cni:
        #     name: custom # Name of CNI to use.
        #     # URLs containing manifests to apply for the CNI.
        #     urls:
        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    token: iygj8w.z7uit187lu4rbtzg # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: vvuBStcv5rpo6zH59pXrcxRvu8tZTSUD/mFLlfqQ3uQ= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVMrZ0F3SUJBZ0lRUis5N1BETkl5ck5CRFhrZmJnNXlOREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTBNVEV5TURJek1UVTFNbG9YRFRNME1URXhPREl6TVRVMQpNbG93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCRlYyTUFRVUhQZmtScHRNZHJjd0dhdjc5bG5KRFFjR1lsM0lTSlB3WGJxYmNhVkhHWVFJbnp0RjkzNE0KSmJnMmRRUTlCOUJhclZrRCtmaElBTFBCc01lallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVBMEh5WlVZNEQ1WEcwVWpBeS9rSUo5SG1uTmd3Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loQUlJL05DV0oKdnF0T0oxNzZaVVZ4cmZuL3c3bEszdTl5ODNPcnBUenpFc3ZFQWlFQTRhN0UySTIycm9wR2dsVjZYYUhxMGpCOApCOWtrTDEzTzEvMnJjbEEwL0xvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVCRURNMjE5WGZYbjdXTFpuM0t4eE90bzdjdXQ0S0pUYVZYY3FNcG9qZGZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFVlhZd0JCUWM5K1JHbTB4MnR6QVpxL3YyV2NrTkJ3WmlYY2hJay9CZHVwdHhwVWNaaEFpZgpPMFgzZmd3bHVEWjFCRDBIMEZxdFdRUDUrRWdBczhHd3h3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFXZ0F3SUJBZ0lRSzE3VzgvRi9KU09XTENOa3FSNDliakFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1URXlNREl6TVRVMU1sb1hEVE0wTVRFeE9ESXpNVFUxTWxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCQmxZeXJGWnowY1ZLM1VjaFJpc241MFRhUjZ1Q0RLalVCallEVTFKTFk0ZWZLWkpUYzV6CmZFcnhiTzY0TEI2emRXRXArQUwrWCtxZUFjVlFMYnExTkV5allUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVWdTZtYjJ5Q1JmV1plVU1xZi9ldmptOU42L2d3Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loCkFLVkxIY0lZR3BiN1dWRFExTDZFVkFzUGpQOWV6bzNvd0xEd3BvUXc0T0F3QWlFQTNuV255UXIra3U5QTJKZHcKazlUVlZWZ0JhYlJmbHRZMzVmamthL29PNlJjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVBQY29xUHJMbjJoaGNTUWpNWTlZWXJQQUJkV3ViYXphYVdiTXZBWFVrek5vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFR1ZqS3NWblBSeFVyZFJ5RkdLeWZuUk5wSHE0SU1xTlFHTmdOVFVrdGpoNThwa2xOem5OOApTdkZzN3Jnc0hyTjFZU240QXY1ZjZwNEJ4VkF0dXJVMFRBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBd1J1cytFWFpjUHBSZmdKSVJ5SEJPTXJlckpGRk9URWhNOWpIYXlCbk4rcGRJc2dBCmxGNXVvdHlSTkxYN0p3WWxZL3VsdnJzL2ZPY1NDZEQwMTA0SkxzOWh4a3RWZHdxUi9ZZVVqQ3RJbmFId3F2TXcKWEVJYmlGYWd0VHVuYnVNMjJrdk1kb01mRTVBTmxIZjdySjJpMWw3K3kzNU5ZUkk5Q25FSTBncHhSN1NPSkZiTwpWS0h4OTZWSDdZWkxRcnd4M0VsQUljc1Y2bjYrQVNiTzA5MVorRnhnM1NUQnlQdkIwWmlBNUE2SWZGdndMcXpNCnFwS1UxNW5zV1V6L2N3TDNoSUliMzEvZ1Bxb3NoREJKZW80RlJuUEFJVjRmd04xVGdWdjR3dTVpZkpTcXN6MWQKb1IxUFBhdW95V3RQM0p1TWtHelY1Yk1QWkxMcWVaUnpkYzNGT2pPUGxLaWQyVzdmS2g3bytUYVZiUFFZWkdYNQpYbDdSaWczOXRkaVB6QkdKT1dPQjFHaitYZW5KV3ZHQ0xtb3JDaGdkNTFyL1JBTDJ0WXNxMTl0V3VYNGowSTUxCmdKeUhnWURUaHk4WHlLb1R1aXlEa29ZVE52aExQMDV1QnIvRy9QSGtLNFpRYlo1SGluSTY2MWxRMHVIL0FuSmoKQk16OWpndW1zRUQwT0JvWlJvL0pXTWs1TDMvdTJESzZiOU12cU1jbG5Kb2RJK3Z0MmZoK2V0eWZqTmxpR3E0WQpQajFnbzM1YWcwR3FSVXk2TFpVSkl5NnpmLzhQWW9EQm5KWFEvMmVGalVyc21acnBEcUZ4WGEzNWZ6WnMyN3c2ClROZ0prc25XcWdOaFpSMjFGY2l6ak0zbC9HY2h0VFFkbWxRZWRQd0syRzE1M3M3bCtMelJtQm5TQ2hNQ0F3RUEKQVFLQ0FnQU1VRXA0VG1QdUsxZ1U4K3BOOXQ0T1ZBbGM4YXA3V2lHbTM3VGZwT0pRRTNhNjZBdjVhZ2dlQkhpUgo1dVRMK1QxYkljblEzcm5PcWlGaFZOeTMrZmJsOEQxbzJwYnBqMWY5MWE1b1BiNVVwdVhrMExzTnR2MXdkUzJzClFOQ05acG14MDlHRzRSZVROTVZZNlVtNEdSa3dHRUNoRXoyMTZlYlFpcUtvV2hnZEhXdE83K1lhU1hWWGVFZWMKNHNwYnlBcFo1S1hkUWNqMCtmMzlyczdUZmJMbC9tWUMwL3d6WjdKVlBpZEI0NWRhYnJaakU0dTllTGxiQWlxcgpDeGppNlphRThaTDdiRzZ0TUViRWF4dlVYOGdBVlJNMFRYOHkyaW9mL3BCZlJib3IvWUxoQ1JHMlcxc1pNS0FECnIvOFlyeWFJY3hnMG5IVm4wMnpXTWR3bTcrY2FrWmFLSmtaNjlnNjVIRUd4ajcyUi9FSVN1UTRJaElYdjBGT2QKbUQzNDhZdUlsMDU1TGUrcEE0aVVCbzdEeUZmZXdTZ0NLOTlsaXh2WWZZdnBrbHdvU0c2ZktWckkreDFVcVpuTgp6QUEzdGR6TTVxc3ZWWUNnQ0ZLSEVWMEFrTVR4TEQxRW9Id2x5ZFdWU0F2SFh6SVdxMG9jbXltbnRYVTRiUmhQClFuekcrT1JaUlNrZ3ZQdG5oT1F5ZzVDKzRkd2lvb0grR0lsaDlhb29rdWY2Z3V1TDZMNG41UnJ2emZCVTMzeWcKMVhYcXRtTDlBN1JxdUNFRjUvMG1GWStFVkRZRy9Fak9GNTM4VzE0czRsMWpUU3VBMEg2SndkeUFFTzg2bWw5ZworV3RyY3JuMlRidlZFZWlJd2hQYnZJTkYvV2hoTm5aeWRvQVp1VXJmYmErN0JDSXp5UUtDQVFFQTBpNWRGK0pmCjUxYkZ3YW1VRmdIbjVXTldvTVlDZEJUUVhMSXhaQjkxdllRTzA3b01QUldoMHNzUGVEdXFHMGIzS0lxdFRoT3kKaFF0YVdwdjVFN0NIVENWTXpua2EycEVGWmtJZG9pdE1DOG9tZzJPUEluL01hc0VzWVNITE9hanlna0FIOCtxNwoydm1VVFZHSXlISjl6ZXVXSVJyR3RieTMrYmc5bDYwbGdNeXEzWG1ERWlubDdkelFNTVlnSzR1TEJTVGorVThjCm93QzZPY2JhdjVjZk9KM25PTjlCVDczOFRydlhBaEpuNEVtaFRrQ0gwUWw2YUZYQTRmay9iKzJjbDZEUmlyT1oKRDVpODQ5Q2xucmJ3UTdSSk5kVTEzWGtTMUxQUG9mVjdyMTZydncrVTVBTVRIT0tjdWVSam8wU3ZNN3A5RGpLYQpoMm4vWjFNU0FaalUxd0tDQVFFQTZ6U0RxUFBCeUI1bmZWdno1UVpWMW1nczRjTVpIR1BoTURKWVM4b2hqWU5LCkhxRzE1QzllZVlXMEdHQ0g2bkt0bk1TVXlDYzFjMHc3RU95SENuQVF0a0hza0tMZ3hXOTcvRWNVeDhyZm0zL2QKMFBBYjJhOWc4RUVIbWN4RWUwNENoY293VkN3WU1FTE9LanpMTW9CK0NZMkVudEhXWDN0SXVocEprYkRXbGVrTgppNUp0My9qR1ZoMlZsMGwrbW1oN012eVVjLzdTTzJHQU9UTm5WVFFkdXAwVU16SXhua3dMZWtOd1pLdUVzOU1HCi94V2s4elpkQVJFYXIyaUFOR0o4Vm4zYlpVOWM5ajBoUUlWYlYwL3A2dHU0TExKSHRzdFdKRzNQK3ByM2MwWTkKZGNEMHJzdkdwREtjT053aGc4MkxTa091VWRRR2dhUzZZeFY3d0E4UkpRS0NBUUExL0FTYk91REpLYWQzbTVmVwpvenl0MVhzTnBtNUE1SXUwRTJ6T082cGhPQWNhNk1GMSt4VnFjQStVSVRjSzlJcE5GbmwzQVdZcitBT0lIR0c0ClpmSUtZOVk3ZmkyZ2ova2tENzFPeHZJc1lRck5Xb2dNSTJrY3ptc1lzN1pnSS8zTjZLWmlSeHRqSGhHeVhrdlUKdUZ1SnhZWDFFTXlUSjFyVndEWEp2SVpTYzc4N1RaZVYxYjhoL2tKWEZMeDBrczN0VDFGaTJxZ1BVZ09ERFlsbwpCbWZWZ2ZFKzBWRVVLMGNmN2UxR3NmV09UVHNxUHpialFSejRxWFgyVksrdmp3ZFdoczdyWWovaEdxa0JscmpECmNGZDcvRldGaHpManBOSnFZWmptRDRocVBkVzlLRUprNGtsSmRRY3VVL1FubmwrbDJMT0FMdzB6MU16dC9BODIKNjh0WEFvSUJBRG9Ec1BucWJnRFRad2xudGVmbXdTTnFmSytPOU5HbzNUR0xLWFpBUERod2lzYTFjbXovTmhsWgpYa3VvKzcxYlhmRk9GN2lxMnljK1JVOXVWL3krR1pFcS81UEphUkdwNXZZWi9ra3RoQ3dSeFArMVNkbE94ZVZjCjFPZ2RsMEttd2o2SDJaWFpibm53OEhOQW5Zb3VZV2d2ek9kenNLSEtnZXpOY1JvTGVWSnVzcFdibjVoZi8yUGMKVmpxRHVVT1N3OWlXcm5OU0JqNzVWS3hIUHBTb2p6Q3BjQU1VdldKak5XMkoxdDR0NUVTS3A2NGhnNWN0OEpERAp6RVk1eTIyZ1lUVGdSRTVmM2ZrcXFOb0dTcnBsanJnTVRBaFNUUmdNWFlvTXdBRDdXay9Ib244NkFlQmZpUGFWCk9TMVpOcmNRNnV0OWVERGMwR0lINUtWdDlpRXdWalVDZ2dFQkFLYnJEbjA4UU94UUNCODJ0NktrK1dBb0RxWHIKZUVvaGJlL2grU2lvelJlc2htWlV3ZUdKSS81ZXRYL2JqbDJzWjltczZMNTFwSE14YW1pMW1MR2RyeDljQ2R0WQoyOGlXZGs4MGNoSE5LcW1RNitSeVB4SllMaW5vMFpIc09LU1c2NWdUcHd5eXZqRjE4OXRLaHg4UDRvK3laL3dUClpJOUZkUEU4VE16ZG05WHY3SDZDNjIxZHNGUUdiRG1rWDVGTVZMSE9Bc1doOEFycXVZc3NGb3VsOWlMNzRjV3QKaWR0R1AwdUl5ZlFLTitkVXN4OEVpbWZQVzNMczFXdkV1UjBmOExJbm1Dcm5mYWdnWXBDL0c3Zndxc1JoNCsrVApIZjFLb0UzK3NuNm1MWWxsSGw2aWQ5clUvQjBxTzFpY3NaS0tvYk9XcnZhSnk2d0IxQStJeG9KU0kwOD0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
    # API server specific configuration options.
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.31.1 # The container image used in the API server manifest.
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.101.100
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
        # Configure the API server admission plugins.
        admissionControl:
            - name: PodSecurity # Name is the name of the admission controller.
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.31.1 # The container image used in the controller manager manifest.
    # Kube-proxy server-specific configuration options
    proxy:
        image: registry.k8s.io/kube-proxy:v1.31.1 # The container image used in the kube-proxy manifest.
        
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.31.1 # The container image used in the scheduler manifest.
    # Configures cluster member discovery.
    discovery:
        enabled: true # Enable the cluster membership discovery feature.
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                disabled: true # Disable Kubernetes discovery registry.
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmRENDQVNPZ0F3SUJBZ0lRS3VvQ3c5TzJwRi9LYzhDR1ovYUdFREFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkwTVRFeU1ESXpNVFUxTWxvWERUTTBNVEV4T0RJek1UVTFNbG93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQklUMnMrSFROUFppClhGMHVTaWxUemJvc1BNWTBVeG84dVA2RlQvc01ycGxHUDFKeE5yc28yWDZCOEJ6cnp0YURnNWVYRml6UEN3dGwKeXNqUWsrWGw0aGFqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVcktnZTJFT1JiWi9YCnJKaGpmanpUbzBjQkl1UXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWhBTlVXQmxhYmF3QWV1T0szenUrajBJNEcKaURhUzd4K0NKcGFVVFFKbVhPRzlBaDhkNGNXMStOb1RxQWtmY3EwTm9zMVRmbFRTNFVTd2l6YkEwbWFycENyMgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVBZeTBHYmJSWkFVM2lMT2l3aGJIZTBpRjNJak91NzE0dkZBUjRDQmR4Q3RvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFaFBhejRkTTA5bUpjWFM1S0tWUE51aXc4eGpSVEdqeTQvb1ZQK3d5dW1VWS9VbkUydXlqWgpmb0h3SE92TzFvT0RsNWNXTE04TEMyWEt5TkNUNWVYaUZnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        
        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.5.16

        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
        # advertisedSubnets:
        #     - 10.0.0.0/8
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml

    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.3 # The `image` field is an override to the default coredns image.

    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).

    # # Allows running workload on control-plane nodes.
    # allowSchedulingOnControlPlanes: true
