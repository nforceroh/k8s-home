version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
    type: controlplane # Defines the role of the machine within the cluster.
    token: gj7ebl.69yzli21lqynh71n # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBMEhqWkNFNURUa29Dem9MUVFOTzFvVEFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qUXhNREkyTURFMU1UVTVXaGNOTXpReE1ESTBNREUxTVRVNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQURDdU5TQkVQN21XbEkrZWd5M2RJb1B4TTFaYWJwU3ljZFVxCjdBSVArcHpTbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5KZnBaeHVpbFZLUVZSeApKYXR3aktwdk9RVWdNQVVHQXl0bGNBTkJBQkhCd1d0ZXN1L0N4UUxGRXk2SHdmd1AvMmlDSWxIM24xYkdybzl1Cndrb1hmQ1J6dkV4MmFadWQvM2FNNzZYTmV5dnd2Y2pEa1owc3Bjd3ZSZk5UQ0FVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJRlFnVjlUUG1KakxjVGIrQ3VlMlNYNkJoU055YXJnc29GbkxLY3FnYjRlNgotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs:
        - talos.nf.lab
        - 10.0.0.244
    # Used to provide additional options to the kubelet.
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.31.1 # The `image` field is an optional reference to an alternative kubelet image.
        # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: "true"
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true

        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider

        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        hostname: talos01 # Used to statically set the hostname for the machine.
        # Used to statically set the nameservers for the machine.
        nameservers:
            - 10.0.0.1
        
        # # `interfaces` is used to define the network interface configuration.
        # interfaces:
        #     - interface: enp0s1 # The interface name.
        #       # Assigns static IP addresses to the interface.
        #       addresses:
        #         - 192.168.2.0/24
        #       # A list of routes associated with the interface.
        #       routes:
        #         - network: 0.0.0.0/0 # The route's network (destination).
        #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
        #           metric: 1024 # The optional metric for the route.
        #       mtu: 1500 # The interface's MTU.
        #       
        #       # # Picks a network device using the selector.

        #       # # select a device with bus prefix 00:*.
        #       # deviceSelector:
        #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
        #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
        #       # deviceSelector:
        #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
        #       #     driver: virtio # Kernel driver, supports matching by wildcard.
        #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
        #       # deviceSelector:
        #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
        #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
        #       #       driver: virtio # Kernel driver, supports matching by wildcard.

        #       # # Bond specific options.
        #       # bond:
        #       #     # The interfaces that make up the bond.
        #       #     interfaces:
        #       #         - enp2s0
        #       #         - enp2s1
        #       #     # Picks a network device using the selector.
        #       #     deviceSelectors:
        #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
        #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
        #       #           driver: virtio # Kernel driver, supports matching by wildcard.
        #       #     mode: 802.3ad # A bond option.
        #       #     lacpRate: fast # A bond option.

        #       # # Bridge specific options.
        #       # bridge:
        #       #     # The interfaces that make up the bridge.
        #       #     interfaces:
        #       #         - enxda4042ca9a51
        #       #         - enxae2a6774c259
        #       #     # A bridge option.
        #       #     stp:
        #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

        #       # # Indicates if DHCP should be used to configure the interface.
        #       # dhcp: true

        #       # # DHCP specific options.
        #       # dhcpOptions:
        #       #     routeMetric: 1024 # The priority of all routes received via DHCP.

        #       # # Wireguard specific configuration.

        #       # # wireguard server example
        #       # wireguard:
        #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
        #       #     listenPort: 51111 # Specifies a device's listening port.
        #       #     # Specifies a list of peer configurations to apply to a device.
        #       #     peers:
        #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
        #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
        #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
        #       #           allowedIPs:
        #       #             - 192.168.1.0/24
        #       # # wireguard peer example
        #       # wireguard:
        #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
        #       #     # Specifies a list of peer configurations to apply to a device.
        #       #     peers:
        #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
        #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
        #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
        #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
        #       #           allowedIPs:
        #       #             - 192.168.1.0/24

        #       # # Virtual (shared) IP address configuration.

        #       # # layer2 vip example
        #       # vip:
        #       #     ip: 172.16.199.55 # Specifies the IP address to be used.

        # # Allows for extra entries to be added to the `/etc/hosts` file
        # extraHostEntries:
        #     - ip: 192.168.1.100 # The IP of the host.
        #       # The host alias.
        #       aliases:
        #         - example
        #         - example.domain.tld

        # # Configures KubeSpan feature.
        # kubespan:
        #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        disk: /dev/sda # The disk used for installations.
        image: ghcr.io/siderolabs/installer:v1.8.1 # Allows for supplying the image used to perform the installation.
        wipe: true # Indicates if the installation disk should be wiped at installation time.
        
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k

        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Allows the addition of user specified files.
    files:
        - content: "[metrics]\n  address = \"0.0.0.0:11234\"        \n" # The contents of the file.
          permissions: 0o0 # The file's permissions in octal.
          path: /etc/cri/conf.d/20-customization.part # The path of the file.
          op: create # The operation to use
    # Used to configure the machine's container image registry mirrors.
    registries:
        # Specifies mirror configuration for each registry host namespace.
        mirrors:
            docker.io:
                # List of endpoints (URLs) for registry mirrors to use.
                endpoints:
                    - https://harbor.nf.lab/v2/proxy.docker.io
                overridePath: true # Use the exact path specified for the endpoint (don't append /v2/).
            gcr.io:
                # List of endpoints (URLs) for registry mirrors to use.
                endpoints:
                    - https://harbor.nf.lab/v2/proxy.gcr.io
                overridePath: true # Use the exact path specified for the endpoint (don't append /v2/).
            ghcr.io:
                # List of endpoints (URLs) for registry mirrors to use.
                endpoints:
                    - https://harbor.nf.lab/v2/proxy.ghcr.io
                overridePath: true # Use the exact path specified for the endpoint (don't append /v2/).
            registry.k8s.io:
                # List of endpoints (URLs) for registry mirrors to use.
                endpoints:
                    - https://harbor.nf.lab/v2/proxy.registry.k8s.io
                overridePath: true # Use the exact path specified for the endpoint (don't append /v2/).
        # Specifies TLS & auth configuration for HTTPS image registries.
        config:
            harbor.nf.lab:
                # The TLS configuration for the registry.
                tls:
                    insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
                    
                    # # Enable mutual TLS authentication with the registry.
                    # clientIdentity:
                    #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
                    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
                
                # # The auth configuration for this registry.
                # auth:
                #     username: username # Optional registry authentication.
                #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
        stableHostname: true # Enable stable default hostname.
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            enabled: true # Enable KubePrism support - will start local load balancing proxy.
            port: 7445 # KubePrism port.
        # Configures host DNS caching resolver.
        hostDNS:
            enabled: true # Enable host DNS caching resolver.
            forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
        
        # # Configure Talos API access from Kubernetes pods.
        # kubernetesTalosAPIAccess:
        #     enabled: true # Enable Talos API access from Kubernetes pods.
        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
        #     allowedRoles:
        #         - os:reader
        #     # The list of Kubernetes namespaces Talos API access is available from.
        #     allowedKubernetesNamespaces:
        #         - kube-system
    
    # # Provides machine specific control plane configuration options.

    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.

    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # Used to partition, format and mount additional disks.

    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.

    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824

    # # The `env` field allows for the addition of environment variables.

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Used to configure the machine's time settings.

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

    # # Used to configure the machine's sysctls.

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # Used to configure the machine's sysfs.

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64

    #         # # Defines the encryption sector size.
    #         # blockSize: 4096

    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue

    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.

    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.

    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # Configures the node labels for the machine.

    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue

    # # Configures the node annotations for the machine.

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # Configures the node taints for the machine. Effect is optional.

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    id: Mvvur2B0l5f4YPnJ659IVqR1fPmWuQHDTNf_rFBbl4w= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: TYkh9I215IEGfZ4NE5ANcAWjaBFP+cIpSwa0ZCoDU3Y= # Shared secret of cluster (base64 encoded random 32 bytes).
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://10.0.0.244:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: talos # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        dnsDomain: cluster.local # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        
        # # The CNI used.
        # cni:
        #     name: custom # Name of CNI to use.
        #     # URLs containing manifests to apply for the CNI.
        #     urls:
        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    token: v9fika.g9kyj9ty1e0ipaol # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: pSbSVVrfo+9hJr7GNNoPvVDd0ksMWOM2Al29xmqrNGM= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUl3c1NZaHROREUxRTMrdjZhaTNXeHd3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREV3TWpZd01UVXhOVGxhRncwek5ERXdNalF3TVRVeApOVGxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVErQSszTkQxcEt2WHJOZ1dIazU0dXN3TnJjMjhvTXBiUk96c2V1OXBIZDFZbkVoNHVRTjlkUG5vTTkKV0xwcjZLRU45aXhFc0hxb1R1OER3UGdzZVBpQ28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQVFlUjZPT1BaRlR5T2oxTGFiUEZ3ejliV21LTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSURLWUxWSEQKMXdNd2VqVjEwMkI0ZWtLMmorUWFUU0lrYm4yK0VNV2hjZzBnQWlFQTRDU2Z3S1VBM2V5c2c5MmQzVURpczJpeAozd0JDV0RDalo0eWwxdDV3WUZJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU9tVkcrcnJyUEJ3N1ZUeDdzQ2cyd3dqekt6ejNWajBsNlFKcWF3SzBIZHdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUGdQdHpROWFTcjE2ellGaDVPZUxyTURhM052S0RLVzBUczdIcnZhUjNkV0p4SWVMa0RmWApUNTZEUFZpNmEraWhEZllzUkxCNnFFN3ZBOEQ0TEhqNGdnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU8waHplVGVYbEppZC9LYTZQWVl6a2t3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU5ERXdNall3TVRVeE5UbGFGdzB6TkRFd01qUXdNVFV4TlRsYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVNEQlZ4emNUVzZnaldDeERtbUYvZWVxd3dFN0xNaFlBVFlCamtPVTlrZXphRDF3MTEvClhjbjdYYVQ4NUFWaVE5Tm12OWwvbmg4Ym5zT1JBRCtYLzdraG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGQXZHUWJMUERVdnNIVVhzclc0VVY3bG5JNU1QTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRRDUxQTE4ZHJybnp3S2MzdVBBdXBLV3RHbHZpU1RwU0JaNjVJV1k3YXlsQndJZ0YzKy9FaTRZNTkxSVBQNHEKZmZGZGhmMmVyNUhSdnZuMS9ybWpCNG81ZmVBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU9CbElMUUdFOFNiaVVDNVgxVC81WU9MNEZoUk9WR21WRHZUZDVtOUpyN2RvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZ3dWY2MzRTF1b0kxZ3NRNXBoZjNucXNNQk95eklXQUUyQVk1RGxQWkhzMmc5Y05kZjEzSgorMTJrL09RRllrUFRaci9aZjU0Zkc1N0RrUUEvbC8rNUlRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS2dJQkFBS0NBZ0VBNUZMS1dsZmE0NjhFSU1Cbng3YUVnRlp2TmRPNFJqTUFFQ1c1bExxd0lZQzlhOFdtClZtdGJueDc1K0xtRmpuVGhGMmJQSldIeDVHaGxEL0o3eXdZSWIwTUFNeERsdWNFcnlQKzExc3pJVVJTTUZjZkIKQWZzWERWYTI3T3dtYjFIYVNZSFRZY2RFaHFpN2I0Y3pjOE4veU8xc3hZZzA3bmo4RitTUEFZNmJrWmFPRGZ4NQpUWWRQTGdlWlRpNjhPSFNTaFJoVTN2SkZ6RXZtN2M2OXR5V3JrV3loOWVWZDhqVWtCMm5vYVV2UC90SjlxbzRXCjZWZnYrN240cCtUSTdOWG5LMVNRQ3kyNy9HSExvSEJ4SFJUNEU1cFh5c0lBbkdxYTUwQ2o0ak5uaVk5US9iVlQKOW5SZ0ZuOHowWExHRXpGSExHLzE5WHhORU1NZzdpK1o4TG83VldQOXhxVU9QMnZkZDVlbGl4RFh4TDhIV2FRaQp6UmIxYTJHMDBialVIV2dIM0hidXhkVDF0dlpUaVpnUDcyejlYeGZtL2U3SFllV3k1b3JhTVRqTEJxakIwVEdIClRPSllOZmF0UnBXOFRoV1ZqTHcxMGsyUDRGejNxQVljTFlnclZJcnVIbHRSTmRNL01UbnU3TnFGYkRKcjJnSDIKK2xmalNYcFZLV2h5N3ZqalFtMUkwc1ptc3Y5bkVtZ0pDUnBBL0FkbGNwSHBabDkzQWtlTUg4bUtXNEtvZ2lldwpLaTdtdlR2cFQxV3VGTWxGTkVMOUczQTV0WFFGSFVlSmdlbUd2aWZTMDN4dmtEVEVXRTlkRElrRlNha2hLa1lWCmhKaWVqRWQwK2lGZytnRFduRU55YWdMelBJNm05WFZxYUUvc0hQbGs4MmtpZ3kvNENSL1E2MGZhenpVQ0F3RUEKQVFLQ0FnRUExVXBaNmdlRVhZblRTMTB5RmFqMUlvYWNJU2FGVUY2NFFsMWJmZ3JnR293UFo2d2Q5VUVaT0E1Ugo2ZjQxTzUwSDRUcVRiQktSUzVRU1JORjZ2M0FGVlJxOEJ2aFVBakRvWEQ0MGVsS1hGdGNnL2YrNjE4VGVCZ0hwCnBHMytnYU52VFpmUUJkbUd0RnpQckNJYStKdTZ0ZExGOThtRDJQcUFWVG1ZTmhZb1VkclpIVXVyYmJkblNsS2kKN2h4T2pGYXB3VmUzZ1FYR0dsRVZpelhFbUdEQ1kzbWQydjNIdzBuTlBIZTlPeEF0WDVqMjkrc0FrRDhyMm5ZaQpTWVU2QmJUVTNPK0VHRTFDL1VQR1d6eHZEb0hXTlVuTGxZZWgxbnpuOC91NG5NajBnZGEyREN2bUlhY1pWQ3JFCkYzY21maXRjbDdDSGppbnVQQ2hzak5VKzgxaWxyeDJlY1lsMHdkYlZtVkZFNmF6ZFdnMTAyc3dvRzh0TG94OUgKcnRsWXoxWVQvOTIvb04xVE96dHU2NzZDMUhiZTNOU3BveExybjNBUStyMFA4UHpzZ25UVXVPUGFRaTZxTXJxOQo5SzJpb0NHM3gwaGVNSHR0cnZ0TWZkU2RlY2l2TFZCa0lrNDlLczJWeUhuTndWMmFXWlFnR1pRSXVkYWlsN2lNCk03OGRrL3lhVVQyRDFnVFlyNnZMVFo1N0s0YUMybjBMOGZrcXErL0xtU3lrR1dsdnhaeVRGa25JWEgxYkYxS0gKQ3hmNHN2a3NHL2hGVk9YR1RjTXpQMXA5dkU3TFdhMlQzeGZnL0w4YU9SM0V1MnZoUXVBU1BDSjRrMzZhbGN5UQp3MHZpSUVYbGxhNlphWlNsalQwcTI5TW55b2dSaEFGczZQK0Q0Nkp5b21hdHhjVWJlVUVDZ2dFQkFQUVhHcWppClRCcDhNekhVZ3grZk1rOUdJYnJESEh1d09jVno0akJXa2FBbzFPK3N0bDNUK3ZCZmRRNlBoSzFUMW9NUkx1aVEKSklLZFZRWXFnQTNGY2NXYkFKWVNaRWhkR2sxNHA0ZDlUNVN2dlI3K3NBNmlycUdmeGlLbzAzWm5oM1hjM29HagpBeVJUVDVVZjFGblFTV09CWmpFRjB4dC9uWURaeGxOU0IrblJnMEdkc0hvNkd5akxSMEE3YUY0cWRqZGt1YTZpCnlEYjZRbCtSbHJEeUR6UXJHN3c0QnJrRUxHcWFMZ1ZFajI1MThhYUl1TjZQZHdVczh6NjBqL01UblFRMGswZHMKZUdpbEN4a1FFeTdwOC9pUlR1NWplajd0eFNpZlpvVXozMG5CSnVRaDc1bXhHSEFXd00xNzd1RnVwM1J6NlgrQQozeW8xZ0xOVnhoL3FNcTBDZ2dFQkFPOTJ2cTlsNXBNS1R0a01wOEtnV21TRStvWGQ4Q0pwRmdpZ1lkTjVmTExUCkJUWjlnSW1mT2pmZklEOXBUbERTWHcrZ2xFbmVuWkkvOXl1a2ZFUzNEamgzVVg3WnN3eWVrTWZyaGM4M2pWTlQKK3lhOUpid2FkQUVvN1lBRWNLSFNiWkg0b0RVUzE2ZzhwcTJPUXNPREwraytjWDJldnFhYktLbUdDay9qekQ4TwpFM2hyYjFXd04yQ2NYNEg4a2NRcVFWWXRWYWYwVUJab2pxbnRuVTJUOWk3VEY1cHFuMjB3Y3BINWVsRTlzZDhkCndDZXZWTHRpRG14TVBZdm1raS8waHowOFpweHR2bWVnMmg3VnIvOWJZQjhFRVh0Um8rUGxzbjRSNGdDUFRWZy8KZDdhVDZJajFNWXdnYSsxU0xlNVRxUkxFRmZaQmZxbmR0WWxrSjBLREo2a0NnZ0VBWEN0WlFzcG82RnRiellZcwptVVU0N3h4UllqK0l3dC94Z0xEWWlWNDNFUjQ2QWVMYTNpVk1qWFhPTXRoWXhrWnhLdjdURXJoVFFRcjk3eDBmClM1UHgrU2NsbW9XSlhwWGhkNzJHclMvUlhCamNOaGNBRGhhNkVJZlBmb2ozaUs5aFJFMUpxL1FOSEt0azBxKzUKTk16azJYRWtVSUNkamJXcm1Oc2krNVZ2TFlpU29yVlR6V09obTg3ZXNjOTlBb25RSit5ZC9PYTA2YVdvYUlRRwpQZnk1WnY2Y00zK0ljbGEwR3ZEclRjdnN5VTQ2R0tOcUE0aHk3ZjVpUDV4WSt2VytCYmVBb2FqQTh1clhmUGhICjlpQWJveEhqbHpyekQwNGpjOHAxSVBsTWFJSktHRDBFUjZuS3k1Q2I3enZNSVUzeVo1UFphTzhWMWM5c01NdkQKeTR0WTVRS0NBUUVBbHZhaFdDcEJwa2xGVkFocWFvUjArQkh0Ymg5d21BRHY1eGhWRStEdkFEMlFkNzIvSHdQRwp6QnBhVmgrcFE4S2NNMW5rb24wNWtVM0tJVFZkTW1URkRrd0trSkhtRXZxVUE3VXpjbU52TVMwc2xFdUNVb2ZLCndrQnZHZG15dUJIVkNjVllHcDE2WDVGODhzVlF5YmtXcDFDNmM1dDBUY3hiWWlRaXRDTEVUS3d2RWllSTFOaDIKME8xRU9NcGxpdW1vcnc5OWhKaTlOS05ON1VyamRGam5SclhGbDQvSVdpbkUwTW9hbHNUeU1kcXJuVmtuYmNwdgpsVTZyTGx0NXBjbmV5SGdmcUZaM1J4VmM3VHVCN05aS1RzTmQwZ1N4OGFhSlZIa3BwWGl5SmdROUVGbEdxN0VJClAzTGhGNGhMZEloQmVwY3IwVWVROXIzVENINmZVWXNsb1FLQ0FRRUEySDJ0c290NGhpakVZM2JmN2wrRGNLMDkKalRqVjB6bDFieXRDcEdwTWIzb2MyMWJDMGt2NUl6VTh0dkhNNWxOUE42ZHZiSUs0cmtsc1B4cE1saFZCL1Fkbgp5YTlKTy9FSmRTRWVoT0NtK01hUGZmU2RndnQzeEVXcm1JSTBLclBOOFd3QmwzLytVQ1Qvd2hFQlhOTkt0bG52CkE4OURiTUtQTVlKSVUycmp0Z0M2NUZnZmtMRFJTc2h3dTdjUXpQQ29qSW1vcXRMakhZT1VOVHN2YUZGQTUyZjAKM1IxV1BMVmJQWmozNW4wY2N2eFkyZHkzbHpsMXVmQlZZVmV2WWhvV05rekZLSUlPQnRiU0xCcElwYlBjQVY0bgo3a2lIdFBNL293aHFsRS9LUjdqOHhGd1RBekg4djFTbkI4QUhWRFdQbEZ3Ky8wOEZPKzd6ZkM2NGR3VjhiUT09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
    # API server specific configuration options.
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.31.1 # The container image used in the API server manifest.
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 10.0.0.244
            - 10.0.0.244
            - talos.nf.lab
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
        # Configure the API server admission plugins.
        admissionControl:
            - name: PodSecurity # Name is the name of the admission controller.
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.31.1 # The container image used in the controller manager manifest.
    # Kube-proxy server-specific configuration options
    proxy:
        image: registry.k8s.io/kube-proxy:v1.31.1 # The container image used in the kube-proxy manifest.
        
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.31.1 # The container image used in the scheduler manifest.
    # Configures cluster member discovery.
    discovery:
        enabled: true # Enable the cluster membership discovery feature.
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                disabled: true # Disable Kubernetes discovery registry.
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNPZ0F3SUJBZ0lRQWNiR1Mva3hqMXVoVGhUay9DTjF0akFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkwTVRBeU5qQXhOVEUxT1ZvWERUTTBNVEF5TkRBeE5URTFPVm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkljdTdEK0dTY3kyCkphVUdQYWdyUDg2aUdZKzNWVU9lcUQyWFpUQ0QzMkNUQXNnWXowYVBVV2hlOUVMMmFDZkxGd3R5d0JBQ2RLZGIKYjcvbVlYNDhlaHlqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVdk14dENTSXdYRFd4CkxCWEZGYkFOSmZ3YjJyd3dDZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBT0kzdDFuTW92NDVEVFJDVURKSzBjMjgKUit3SllvZXdHUDg2aFdWeXJaenNBaUVBcE9IZ1U4aEtZdXBieU1oa1ExdEVieVhqY2pZNUZPY1ZEbkJvRXpSYwpTbjg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZpbTlhalFwV0pHT3RKM1g3bU1xUzFhQjVvSnVRbG4rWFk1UzZaemllSklvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFaHk3c1A0Wkp6TFlscFFZOXFDcy96cUlaajdkVlE1Nm9QWmRsTUlQZllKTUN5QmpQUm85UgphRjcwUXZab0o4c1hDM0xBRUFKMHAxdHZ2K1poZmp4NkhBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
        advertisedSubnets:
            - 10.0.0.0/16
        
        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.5.16
    # A list of urls that point to additional manifests.
    extraManifests:
        - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/main/deploy/standalone-install.yaml
        - https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
        - https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/refs/heads/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotclasses.yaml
        - https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/refs/heads/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotcontents.yaml
        - https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/refs/heads/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshots.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    allowSchedulingOnControlPlanes: true # Allows running workload on control-plane nodes.
    
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.3 # The `image` field is an override to the default coredns image.

    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
---
apiVersion: v1alpha1
kind: TrustedRootsConfig
name: custom-ca # Name of the config document.
certificates: |- # List of additional trusted certificate authorities (as PEM-encoded certificates).
    -----BEGIN CERTIFICATE-----
    MIIBmTCCAT6gAwIBAgIRAMZA2d93OfSMpAURmdtuFUwwCgYIKoZIzj0EAwIwKjEP
    MA0GA1UEChMGbmYubGFiMRcwFQYDVQQDEw5uZi5sYWIgUm9vdCBDQTAeFw0yMzA5
    MDcwMjA2MzNaFw0zMzA5MDQwMjA2MzNaMCoxDzANBgNVBAoTBm5mLmxhYjEXMBUG
    A1UEAxMObmYubGFiIFJvb3QgQ0EwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQG
    ltaagHEyYDkdreE+B0fQF4QgDRQOD3FGYxCdsH4X8HL6qtNgm+o1j2Eu6fI8Zku8
    EuAS5LrsuP2nzLj8gweHo0UwQzAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgw
    BgEB/wIBATAdBgNVHQ4EFgQU83nQe661SJd6SwaDe4YuMIXrTmEwCgYIKoZIzj0E
    AwIDSQAwRgIhAInXZD7+T22lKxtZa0I5QhP4BGwMDQM/S6r/yAiQTyNmAiEAmT1d
    nYAUziEmQnmNzcD7s/M3gSv1T1a1d3LtYrNn2Eg=
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    MIICKzCCAdCgAwIBAgIRAMZjRUDFDsJz0yqZAXr9vqAwCgYIKoZIzj0EAwIwMjEP
    MA0GA1UEChMGbmYubGFiMR8wHQYDVQQDExZuZi5sYWIgSW50ZXJtZWRpYXRlIENB
    MB4XDTI0MTAyODAyMTQ0MFoXDTM0MTAwMTAyMTU0MFowGDEWMBQGA1UEAxMNaGFy
    Ym9yLm5mLmxhYjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEEL5BPxAk6nyvab
    cwsvRw2JflRLyDJ0q/gXIvkBlCDMJ3nfQznZ2bVtHpTjURG1fvAn8F2e1DM8P6v2
    AvoB/vOjgeAwgd0wDgYDVR0PAQH/BAQDAgeAMB0GA1UdJQQWMBQGCCsGAQUFBwMB
    BggrBgEFBQcDAjAdBgNVHQ4EFgQUUP7zJIfKmlpbFE5K6R0R8Q8HewkwHwYDVR0j
    BBgwFoAUexLHd8VsrPzUa3AUeH+fn3xulnswGAYDVR0RBBEwD4INaGFyYm9yLm5m
    LmxhYjBSBgwrBgEEAYKkZMYoQAEEQjBAAgEBBA5zeWx2YWluQG5mLmxhYgQrZ25p
    Rk40RDFoWkl5MVpaS3FydFFjWHdNUEZibVpSR1J5WUFPeDJRN1NkazAKBggqhkjO
    PQQDAgNJADBGAiEAkdOZz3X0oCPPY9QBUQkLZ56x1iD/wwo5lx/ZumxVSpgCIQCV
    YwMkdO/Rq+sI9OzRiSqR+dg2Xi3ZWc2Et93bxiYyOQ==
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    MIIBvzCCAWagAwIBAgIQU9EaPXfERZ4zHExBjiiCdTAKBggqhkjOPQQDAjAqMQ8w
    DQYDVQQKEwZuZi5sYWIxFzAVBgNVBAMTDm5mLmxhYiBSb290IENBMB4XDTIzMDkw
    NzAyMDYzNFoXDTMzMDkwNDAyMDYzNFowMjEPMA0GA1UEChMGbmYubGFiMR8wHQYD
    VQQDExZuZi5sYWIgSW50ZXJtZWRpYXRlIENBMFkwEwYHKoZIzj0CAQYIKoZIzj0D
    AQcDQgAEJ9IDnHYSBP0Zqu52WAwKWOqUaE3aMYKYCEZymZ1uxQ9aJQa/07uzTnW6
    Vyt+T9p4oR36emzLb8UAK5wlvKC7xqNmMGQwDgYDVR0PAQH/BAQDAgEGMBIGA1Ud
    EwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFHsSx3fFbKz81GtwFHh/n598bpZ7MB8G
    A1UdIwQYMBaAFPN50HuutUiXeksGg3uGLjCF605hMAoGCCqGSM49BAMCA0cAMEQC
    IEZCwEcgHaFQdwmNElARcSj1VpqVR/6kZHosbqHnKkiaAiA7pw+1ehtOw/jmOGKS
    iHfp87h4ssrokpRDE1fnEdobtA==
    -----END CERTIFICATE-----
