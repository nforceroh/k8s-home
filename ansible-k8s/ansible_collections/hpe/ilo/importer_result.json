{
    "metadata": {
        "namespace": "hpe",
        "name": "ilo",
        "version": "1.0.39",
        "license": [],
        "description": "Ansible Modules for HPE iLO",
        "repository": "https://github.com/HewlettPackard/iLO-ansible-collection",
        "documentation": "http://docs.example.com",
        "homepage": "http://example.com",
        "issues": "https://github.com/HewlettPackard/iLO-ansible-collection/issues",
        "authors": [
            "Rajeevalochana Kallur <rajeevalochana.kallur@hpe.com>",
            "Bhavya B <bhavyab@hpe.com>",
            "Gayathiri devi Ramasamy gayathiri.dev.ramasamy@hpe.com",
            "Nagendra M nagendra-m@hpe.com",
            "T S Kushal t-s.kushal@hpe.com"
        ],
        "tags": [
            "ansible",
            "devops",
            "hpe_ilo",
            "infrastructure_as_code",
            "bare_metal",
            "linux",
            "infrastructure",
            "networking",
            "storage",
            "security"
        ],
        "license_file": "LICENSE",
        "readme": "README.md",
        "dependencies": {}
    },
    "docs_blob": {
        "collection_readme": {
            "name": "README.md",
            "html": "<h1>hpe.ilo  - Ansible playbooks and roles for iLOs using Redfish APIs</h1>\n<p>This repository contains the Ansible playbook samples and Ansible roles for automating the HPE server lifecycle management using iLOs.\nThe examples highlight the capabilities of the modules and their ability to be integrated into more complex playbooks, workflows, and applications.</p>\n<p>These <a href=\"https://github.com/HewlettPackard/ilo-ansible-collection/tree/main/roles\">roles</a> and <a href=\"https://github.com/HewlettPackard/ilo-ansible-collection/tree/main/roles/playbooks\">playbooks</a> should give you a very good idea of how to create your own playbooks for your own needs.</p>\n<p>Example playbooks and roles use the following collection and modules:</p>\n<ul>\n<li><a href=\"https://galaxy.ansible.com/community/general\">community.general</a> collection - Following is the list of the modules that are being used from this collection:<ul>\n<li><a href=\"https://docs.ansible.com/ansible/latest/collections/community/general/redfish_info_module.html\">redfish_info</a></li>\n<li><a href=\"https://docs.ansible.com/ansible/latest/collections/community/general/redfish_command_module.html\">redfish_command</a></li>\n<li><a href=\"https://docs.ansible.com/ansible/latest/collections/community/general/redfish_config_module.html\">redfish_config</a></li>\n<li><a href=\"https://docs.ansible.com/ansible/latest/collections/community/general/ilo_redfish_config_module.html\">ilo_redfish_config</a></li>\n<li><a href=\"https://docs.ansible.com/ansible/latest/collections/community/general/ilo_redfish_info_module.html\">ilo_redfish_info</a></li>\n</ul>\n</li>\n</ul>\n<h2>Requirements</h2>\n<ul>\n<li>ansible &gt;= 2.15</li>\n</ul>\n<h2>Installation</h2>\n<p>To install in ansible default or defined paths use:</p>\n<pre><code>ansible-galaxy collection install hpe.ilo\n</code></pre>\n<h2>Ansible set up</h2>\n<p>To install Ansible and Community general package use:</p>\n<pre><code>sudo python -m pip install ansible\n</code></pre>\n<pre><code>ansible-galaxy collection install community.general\n</code></pre>\n<pre><code>pip install python-ilorest-library\n</code></pre>\n<pre><code>pip install paramiko\n</code></pre>\n<pre><code>pip install certifi\n</code></pre>"
        },
        "documentation_files": [],
        "contents": [
            {
                "content_name": "systeminven",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>systeminven</h1>\n<p>Stores all the System inventory information of the system in a JSON output file.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: SystemInventory\n  roles:\n     - systeminven\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "verify_logical_drives",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Verify Logical Drives</h1>\n<p>Verifying logical drives details in a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  raid_details:\n    required: true\n    description:\n      - RAID details that need to be verified in the given server\n    type: list\n    suboptions:\n      LogicalDriveName:\n        required: true\n        description:\n          - Logical drive name that needs to be configured in the given server\n        type: str\n      Raid:\n        required: true\n        description:\n          - Type of RAID\n        type: str\n      DataDrives:\n        required: true\n        description:\n          - Specifies the data drive details like media type, interface type, disk count and size\n        type: dict\n      DataDriveCount:\n        required: true\n        description:\n          - Number of physical drives that is required to create specified RAID\n        type: int\n      DataDriveMediaType:\n        required: true\n        description:\n          - Media type of the disk\n        type: str\n      DataDriveInterfaceType:\n        required: true\n        description:\n          - Interface type of the disk\n        type: str\n      DataDriveMinimumSizeGiB:\n        required: true\n        description:\n          - Minimum size required in the physical drive\n        type: int\n</code></pre>\n<h2>Dependencies</h2>\n<p>No Dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    raid_details:\n      - LogicalDriveName: LD1\n        Raid: Raid1\n        DataDrives:\n            DataDriveCount: 2\n            DataDriveMediaType: HDD\n            DataDriveInterfaceType: SAS\n            DataDriveMinimumSizeGiB: 0\n  roles:\n    - verify_logical_drives\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Varni H P (@varini-hp) Hewlett Packard Enterprise 2021</p>"
            },
            {
                "content_name": "powerreboot",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>powerreboot</h1>\n<p>Restarts all iLO systems.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. </p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - powerreboot\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "delete_all_snmp_alert_destinations",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Delete All SNMP Alert Destinations</h1>\n<p>Deleting all SMNP alert destinations in a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - delete_all_snmp_alert_destinations\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Varni H P (@varini-hp) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "settimezone",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>setTimeZone</h1>\n<p>Set the timezone for the iLO network.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> need to mentioned. <code>attribute_value</code> needs to be passed.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     attribute_value: Chennai\n  roles:\n     - setTimeZone\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "creatoutput",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>creatOutput</h1>\n<p>Creates a json file on the local system in order to store information.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>  - name: Define output file\n    include_tasks: create_output_file.yml \n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getvirtmediainfo",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getvirtmediainfo</h1>\n<p>Stores all the Virtual media information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: VirtualMedia\n  roles:\n     - getvirtmediainfo\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "setonetimeboot",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>setonetimeboot</h1>\n<p>Sets a one time boot to the mentioned bootdevice. This function only works when the bootmode is set to legacy bios.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>bootdevice</code> needs to be passed.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     bootdevice: Pxe\n  roles:\n     - setonetimeboot\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "setbiosdefault",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>setbiosdefault</h1>\n<p>Sets the values of all bios attributes to default values.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - setbiosdefault\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getmnicinven",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getmnicinven</h1>\n<p>Stores all the manager NIC logs in a JSON output file.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: ManagerNicInventory\n  roles:\n     - getmnicinven\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "delete_ilo_backup_files",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Delete iLO Backup Files</h1>\n<p>Deletes iLO backup files if present on a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role:</p>\n<pre><code>- hosts: servers\n  roles:\n     - delete_ilo_backup_files\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Nagendra M (@nagendram399) Hewlett Packard Enterprise 2023</p>"
            },
            {
                "content_name": "getchasspower",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getchasspower</h1>\n<p>Stores power information about the Chassis in a JSON Output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: ChassisPower\n  roles:\n     - getchasspower\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getstgctrlinv",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getstgctrlinv</h1>\n<p>Stores all the Storage inventory information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: StorageControllerInventory\n  roles:\n     - getstgctrlinv\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_network_adapter_details",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get Network Adapter Details</h1>\n<p>Get the physical network adapter details from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - get_network_adapter_details\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "updateusername",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Role Name</h1>\n<p>A brief description of the role goes here.</p>\n<h2>Requirements</h2>\n<p>Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>\n<h2>Role Variables</h2>\n<p>A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>\n<h2>Dependencies</h2>\n<p>A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>\n<h2>Example Playbook</h2>\n<p>Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p>\n<pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"
            },
            {
                "content_name": "logout",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Logout</h1>\n<p>Deletes the session created by the Login role. </p>\n<h2>Role Variables</h2>\n<p>Credential of the iLO - <code>baseuri</code> needs to mentioned. Other variables <code>auth_token</code>and <code>session_uri</code> need to passed from variable returned by the logout role.</p>\n<h2>Dependencies</h2>\n<p>Login role should be executed before the logout role.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n  loginname: ilouser\n  roles:\n     - Logout\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "enable_certificate_login",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Enable Certificate Login</h1>\n<p>Enables certificate login a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - enable_certificate_login\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "getfirminven",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getfirminven</h1>\n<p>Stores all the Firmware inventory information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: FirmwareInventory\n  roles:\n     - getfirminven\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getmeminven",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getmeminven</h1>\n<p>Stores all the Memory information of the system in a JSON output file.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: MemoryInventory\n  roles:\n     - getmeminven\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "changbiosattr",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>changbiosattr</h1>\n<p>Changes the value of a mentioned bios attribute.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>bios_attribute</code> needs to be mentioned in form of a dictionary.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n  - bios_attr: {\"AdminName\" : \"ilohpe\"}\n  roles:\n     - changbiosattr\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getallsysinven",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getallsysinven</h1>\n<p>Stores all the System information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: SystemAll\n  roles:\n     - getallsysinven\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getiellogs",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getiellogs</h1>\n<p>Stores all the manager logs in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: Logs\n  roles:\n     - getiellogs\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "rlcpinstall",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>rlcpinstall</h1>\n<p>To install Yum/Debian packages on remote host.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>local_file_path</code>, <code>remote_file_path</code> and <code>filename</code> are required variables for execution. This needs to be mentioned in the vars file.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - rlcpinstall\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "delete_volumes",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Delete Volumes</h1>\n<p>Deletes volumes specified by volume IDs on a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  storage_subsystem_id:\n    required: false\n    description:\n      - Id of the Storage Subsystem on which the volume is to be created.\n    type: str\n    default: ''\n  volume_ids:\n    required: false\n    description:\n      - List of IDs of volumes to be deleted.\n    type: list\n    default: []\n    elements: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    storage_subsystem_id: &quot;DExxxxxx&quot;\n    volume_ids: [&quot;volume1&quot;, &quot;volume2&quot;]\n  roles:\n     - delete_volumes\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "getdiskinven",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getDiskinven</h1>\n<p>Stores all the Disk inventory information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: DiskInventory\n  roles:\n     - getDiskinven\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_bios_registries",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get Boot Settings</h1>\n<p>This module will get BIOS registries from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n    - get_bios_registries\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "wait_for_ilo_reboot_completion",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Wait For iLO Reboot Completion</h1>\n<p>This module waits for iLO to complete rebooting</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n    - wait_for_ilo_reboot_completion\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Gayathiri Devi Ramasamy (@Gayathirideviramasamy) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "iloreset",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>iLOreset</h1>\n<p>Restart the iLO manager.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - iLOreset\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getbootorder",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getBootorder</h1>\n<p>Stores information about boot order in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: BiosBootOrder\n  roles:\n     - getBootorder\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_manager_inventory",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>get_manager_inventory</h1>\n<p>Stores the server manager inventory information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - get_manager_inventory\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_firmware_status",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get Firmware Status</h1>\n<p>Retrives firmware status from a given iLO</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - get_firmware_status\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Nagendra M (@nagendram399) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "getdefsysinv",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getdefsysinv</h1>\n<p>Stores all the System inventory information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: SystemInventory\n  roles:\n     - getdefsysinv\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_software_inventory",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>get_software_inventory</h1>\n<p>Stores the software inventory information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - get_software_inventory\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "deluser",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>deluser</h1>\n<p>Deletes an iLO account.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO - <code>baseuri</code>, <code>username</code>, <code>password</code>, <code>account_username</code> need to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n  account_username: testuser\n\n  roles:\n     - deluser\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "listallusers",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Role Name</h1>\n<p>A brief description of the role goes here.</p>\n<h2>Requirements</h2>\n<p>Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>\n<h2>Role Variables</h2>\n<p>A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>\n<h2>Dependencies</h2>\n<p>A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>\n<h2>Example Playbook</h2>\n<p>Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p>\n<pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"
            },
            {
                "content_name": "ilo_factory_reset",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>iLO Factory Reset</h1>\n<p>Performs factory reset a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role:</p>\n<pre><code>- hosts: servers\n  roles:\n     - factory_reset\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Nagendra M (@nagendram399) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "get_boot_settings",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get Boot Settings</h1>\n<p>This module will get network boot settings of a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n    - get_boot_settings\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "delete_all_logical_drives",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Delete All Logical Drive</h1>\n<p>Deleting all logical drives in a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - delete_all_logical_drives\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Varni H P (@varini-hp) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "cleariellogs",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>cleariellogs</h1>\n<p>Clears the manager logs.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n  loginname: ilouser\n  roles:\n     - cleariellogs\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "set_cold_boot",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Set Cold Boot</h1>\n<p>Performs cold boot on a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - set_cold_boot\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Varni H P (@varini-hp) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getchassistherm",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getchassistherm</h1>\n<p>Stores thermal information about the Chassis in a JSON Output file.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: ChassisThermals\n  roles:\n     - getchassistherm\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "update_firmware_through_install_set",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Update Firmware through Install Set</h1>\n<p>Performs firmware update through install set on a given iLO</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  install_set_attributes:\n    required: true\n    description: \n      - Name, description and sequence of the install set to be created\n    type: dict\n    suboptions:\n      install_set_name:\n        required: true\n        description: \n          - Name of the install set\n        type: str\n      Install_set_sequence:\n        required: true\n        description: \n          - List of firmwares to be installed\n        type: list\n        suboptions:\n          Name:\n            required: true\n            description: \n              - Name of the task\n            type: str\n          Filename:\n            required: true\n            description: \n              - Firmware component filename present in the iLO repository\n            type: str\n          UpdatableBy:\n            description: \n              - List of update agents\n            type: list\n            default: Bmc\n            elements: str\n      Description:\n        description: \n          - Description of the install set\n        type: str\n  maintenance_window_details:\n    required: true\n    description: \n      - Name, description, start and end time of maintenance window to be created\n    type: dict\n    suboptions:\n      Name:\n        required: true\n        description: \n          - Name of the maintenance window\n        type: str\n      Description:\n        description: \n          - Description of maintenance window\n        type: str\n      StartAfter:\n        description: \n          - Start time of the maintenance window\n        type: str\n      Expire:\n        description: \n          - End time of the maintenance window\n        type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    install_set_attributes:\n      Name: nfv\n      Install_set_sequence:\n        - Name: nfv\n          Filename: ilo5_278.fwpkg\n          UpdatableBy:\n            - Bmc\n      Description: nfv\n    maintenance_window_details:\n      Description: nfv\n      Name: test\n      StartAfter: '2023-10-09T18:38:00Z'\n      Expire: '2023-10-10T18:38:00Z'\n  roles:\n     - update_firmware_through_install_set\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Nagendra M (@nagendram399) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "get_host_interfaces",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>get_host_interfaces</h1>\n<p>Stores the server host interfaces information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - get_host_interfaces\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getchassinven",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getchassisinven</h1>\n<p>Stores inventory information about the Chassis in a JSON Output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: ChassisInventory\n  roles:\n     - getchassisinven\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "uploadcomp",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Upload compnent</h1>\n<p>Upload firmware onto the iLO server</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code>, <code>fwpkg_file</code> needs to mentioned.\n<code>force</code>, <code>update_srs</code>, <code>componentsig</code>, <code>overwrite</code>, <code>update_repository</code> and <code>update_target</code> are optional variables.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n    - fwpkg_file: ilo5_272.fwpkg\n    - update_target: False\n    - update_repository: True\n  roles:\n     - uploadcomp\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "ledoff",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>ledoff</h1>\n<p>Switches off the Chassis indicator</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - ledoff\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_usb_info",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get USB info</h1>\n<p>Get the USB information from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - get_usb_info\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "map_user_certificate",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Map User Certificate</h1>\n<p>Maps a Certificate to a specified User on a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    required: true\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  user_cert_file:\n    required: true\n    description:\n      - Absolute path of the User Certificate\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    user_cert_file: &quot;/root/user_certificate_file.crt&quot;\n  roles:\n     - map_user_certificate\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_device_inventory_info",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get Device Inventory Info</h1>\n<p>Retrives device inventory information from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - get_device_inventory_info\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Nagendra M (@nagendram399) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "updatepass",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Role Name</h1>\n<p>A brief description of the role goes here.</p>\n<h2>Requirements</h2>\n<p>Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>\n<h2>Role Variables</h2>\n<p>A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>\n<h2>Dependencies</h2>\n<p>A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>\n<h2>Example Playbook</h2>\n<p>Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p>\n<pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"
            },
            {
                "content_name": "get_snmpv3_users",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get SNMPv3 Users</h1>\n<p>This module will get SNMPv3 users from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP address of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n    - get_snmpv3_users\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Gayathiri Devi Ramasamy (@Gayathirideviramasamy) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getvolumeinven",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getvolumeinven</h1>\n<p>Stores all the volume inventory information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: VolumeInventory\n  roles:\n     - getvolumeinven\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_logical_drives",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get Logical Drives</h1>\n<p>Gets the logical drive details from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - get_logical_drives\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "ledon",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>ledon</h1>\n<p>Switches on the Chassis indicator</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - ledon\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "systemreboot",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>systemreboot</h1>\n<p>Reboot the system</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> need to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n\n  roles:\n     - systemreboot\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "delete_all_snmpv3_users",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Delete All SNMPv3 Users</h1>\n<p>Deleting all SMNPv3 users in a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - delete_all_snmpv3_users\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Varni H P (@varini-hp) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getfaninven",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getfaninven</h1>\n<p>Stores all the Fan inventory information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: FanInventory\n  roles:\n     - getfaninven\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "create_snmp_alert_destinations",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Create SNMP Alert Destinations</h1>\n<p>This module creates SNMP alert destinations in a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  alert_destinations:\n    required: true\n    description:\n      - List of alert destination to be added\n    type: list\n    suboptions:\n      alert_destination:\n        required: true\n        description:\n          - IP address/hostname/FQDN of remote management system that receives SNMP alerts\n        type: str\n      snmp_alert_protocol:\n        required: true\n        description:\n          - SNMP protocol associated with the AlertDestination\n          - The supported SNMP alert protocols are SNMPv1Trap, SNMPv3Trap, and SNMPv3Inform\n        type: str\n      trap_community:\n        required: false\n        description:\n          - Configured SNMPv1 trap community string\n        default: &quot;&quot;\n        type: str\n      security_name:\n        required: false\n        description:\n          - SNMPv3 security name associated with SNMPv3trap or SNMPv3Inform set on SNMPAlertProtocol\n          - Alphanumeric value with 1-32 characters\n        default: &quot;&quot;\n        type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>  - hosts: servers\n    vars:\n      alert_destinations:\n        - snmp_alert_protocol: &quot;SNMPv3Trap&quot;\n          trap_community: &quot;public&quot;\n          alert_destination: &quot;***.***.***.***&quot;\n          security_name: &quot;Sec1&quot;\n    roles:\n       - create_snmp_alert_destinations\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Gayathiri Devi Ramasamy (@Gayathirideviramasamy) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "check_user_privileges",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Check User Privileges</h1>\n<p>This module checks privileges of a user on a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP address of the server\n    type: str\n  auth_token:\n    required: true\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  required_permissions:\n    required: true\n    description:\n      - permissions to be checked against provided user\n    type: list\n    elements: str\n    default: ['HostBIOSConfigPriv', 'HostNICConfigPriv', 'HostStorageConfigPriv']\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    required_permissions: ['HostBIOSConfigPriv']\n  roles:\n    - check_user_privileges\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "getfirmupdate",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getfirmupdate</h1>\n<p>Stores all the Firmware update methods inventory information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: FirmwareUpdateCapabilities\n  roles:\n     - getfirmupdate\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "powergracefullshutdown",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>powergracefullshutdown</h1>\n<p>Shuts all iLO systems down.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. </p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - powergracefullshutdown\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_network_protocols",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>get_network_protocols</h1>\n<p>Stores the network protocols information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - get_network_protocols\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_snmp_alert_destinations",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get SNMP Alert Destinations</h1>\n<p>This module will get SNMP alert destinations from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP address of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n    - get_snmp_alert_destinations\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Gayathiri Devi Ramasamy (@Gayathirideviramasamy) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "adduser",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>adduser</h1>\n<p>Creates an iLO account.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO - <code>baseuri</code>, <code>username</code>, <code>password</code> need to mentioned.\nDetails of the new account -  <code>new_username</code>, <code>new_password</code> and <code>roleid</code> need to be mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n  new_username: ilouser\n  new_password: ilopass12\n  roleid: Administrstor\n\n  roles:\n     - adduser\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "confighostname",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>configHostName</h1>\n<p>Configures the hostname of an iLO network</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>attribute_name</code> and <code>attribute_value</code> need to be mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n  attribute_name: HostName\n  attribute_value: ilohpe\n\n  roles:\n     - configHostName\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getsessions",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getsessions</h1>\n<p>Stores all the Session information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: Sessions\n  roles:\n     - getsessions\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "flashfwpkg",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>flashfwpkg</h1>\n<p>Flash and upload firmware onto the server</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code>, <code>fwpkg_file</code> needs to mentioned.\n<code>force</code>, <code>tover</code>, <code>update_srs</code>, <code>componentsig</code>, <code>overwrite</code> are optional variables.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n    - fwpkg_file: ilofw.fwpkg\n  roles:\n     - flashfwpkg\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_hostname",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get Hostname</h1>\n<p>This module retrieves Hostname from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP address of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n    - get_hostname\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "create_volume",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Create Volume</h1>\n<p>Creates volumes specified by volumes_details on a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  storage_subsystem_id:\n    required: false\n    description:\n      - Id of the Storage Subsystem on which the volume is to be created.\n    type: str\n    default: ''\n  volume_details:\n    required: true\n    description:\n      - Setting dict of volume to be created.\n    type: dict\n    suboptions:\n      Name:\n        required: true\n        description:\n          - Name of the volume to be created on the server.\n        type: dict\n      RAIDType:\n        required: true\n        description:\n          - RAID Type of the volume to be created on the server.\n        type: dict\n      Drives:\n        required: true\n        description:\n          - List of drives from the server to be included as part of the volume.\n        type: list\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role:</p>\n<pre><code>- hosts: servers\n  vars:\n    storage_subsystem_id: &quot;DExxxxxx&quot;\n    volume_details:\n      Name: &quot;MR Volume&quot;\n      RAIDType: &quot;RAID0&quot;\n      Drives:\n        - &quot;/redfish/v1/Systems/1/Storage/DE00B000/Drives/1&quot;\n  roles:\n     - create_volume\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2023</p>"
            },
            {
                "content_name": "set_secure_boot",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Set Secure Boot</h1>\n<p>Sets Secure Boot on a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  secure_boot_enable:\n    required: false\n    description:\n      - Setting parameter to enable or disable SecureBoot.\n    type: bool\n    default: True\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role:</p>\n<pre><code>- hosts: servers\n  vars:\n    secure_boot_enable: True\n  roles:\n     - set_secure_boot\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Varini HP (@varini-hp) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_drive_operating_mode",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get Drive Operating Mode</h1>\n<p>Retrives drive operating mode from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role:</p>\n<pre><code>- hosts: servers\n  roles:\n     - get_drive_operating_mode\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Nagendra M (@nagendram399) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "set_spdm_settings",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Set SPDM Settings</h1>\n<p>Set SPDM settings on a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  spdm_settingss:\n    required: true\n    description:\n      - Dictionary with values of SPDM parameters to be configured in the given server\n    type: dict\n    suboptions:\n      global_component_integrity:\n        required: true\n        description:\n          - Values of GlobalComponentIntegrity parameter to be configured on the given server.\n        type: str\n        choices: ['Enabled', 'Disabled']\n      component_integrity_policy:\n        required: true\n        description:\n          - Values of ComponentIntegrityPolicy parameter to be configured on the given server.\n        type: str\n        choices: ['NoPolicy', 'HaltBootOnSPDMFailure']\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    spdm_settings:\n      global_component_integrity: &quot;Enabled&quot;\n      component_integrity_policy: &quot;NoPolicy&quot; \n  roles:\n     - set_spdm_settings\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "ilo_restore",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>iLO Restore</h1>\n<p>Performs iLO restore operation on a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role:</p>\n<pre><code>- hosts: servers\n  roles:\n     - ilo_restore\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Nagendra M (@nagendram399) Hewlett Packard Enterprise 2023</p>"
            },
            {
                "content_name": "getbiosattr",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getBiosattr</h1>\n<p>Stores information about all bios attribures in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n   vars:\n     datatype: BiosAttributes\n  roles:\n     - getBiosattr\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getpsuinven",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getpsuinven</h1>\n<p>Stores all the PSU inventory information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: PsuInventory\n  roles:\n     - getpsuinven\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "poweron",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>poweron</h1>\n<p>Switches ON all iLO systems</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. </p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - poweron\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_trusted_ca_certificates",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get Trusted CA Certificates</h1>\n<p>Retrives Trusted CA Certificates from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - get_trusted_ca_certificates\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "create_logical_drives_with_particular_physical_drives",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Create Logical Drives With Particulatr Physical Drives</h1>\n<p>Creates logical drives with particular physical drives specified by raid_details in a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  raid_details:\n    required: true\n    description:\n      - List of RAID details that need to be configured in the given server.\n    type: list\n    elements: dict\n    suboptions:\n      LogicalDriveName:\n        required: true\n        description:\n          - Logical drive name that needs to be configured in the given server\n        type: str\n      Raid:\n        required: true\n        description:\n          - Type of RAID\n        type: str\n      DataDrives:\n        required: true\n        description:\n          - Specifies the particular data drives\n        type: list\n      CapacityGB:\n        required: true\n        description:\n          - Minimum size required in the physical drive\n        type: int\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role:</p>\n<pre><code>- hosts: servers\n  vars:\n    raid_details: \n      - LogicalDriveName: &quot;LD1&quot;\n        Raid: &quot;Raid1&quot;\n        CapacityGB: 1200\n        DataDrives: [&quot;1I:1:1&quot;, &quot;1I:1:2&quot;]\n  roles:\n     - create_logical_drives_with_particular_physical_drives\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Varini HP (@varini-hp) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getbootoverride",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getBootoverride</h1>\n<p>Stores information about boot override in a JSON output file.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: BootOverride\n  roles:\n     - getBootoverride\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_server_poststate",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get Server PostState</h1>\n<p>This module retrieves server PostState from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP address of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n    - get_server_poststate\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "get_health_report",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>get_health_report</h1>\n<p>Stores the server health information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - get_health_report\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "powerforceoff",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>powerforceoff</h1>\n<p>Force power off on all iLO systems.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. </p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - powerforceoff\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "create_snmpv3_users",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Create SNMPv3 Users</h1>\n<p>This module creates SNMPv3 users in a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  snmpv3_users:\n    required: true\n    description:\n      - List of SNMPv3 users to be added\n    type: list\n    suboptions:\n      security_name:\n        required: true\n        description:\n          - SNMPv3 security name associated with SNMPv3trap or SNMPv3Inform set on SNMPAlertProtocol\n          - Alphanumeric value with 1-32 characters\n        type: str\n      auth_protocol:\n        required: true\n        description:\n          - Sets the message digest algorithm to use for encoding the authorization passphrase\n          - The message digest is calculated over an appropriate portion of an SNMP message and is included as part of the message sent to the recipient\n          - Supported Auth protocols are MD5, SHA, and SHA256\n        type: str\n      auth_passphrase:\n        required: true\n        description:\n          - Sets the passphrase to use for sign operations\n          - String with 8-49 characters\n        type: str\n      privacy_protocol:\n        required: true\n        description:\n          - Sets the encryption algorithm to use for encoding the privacy passphrase\n          - A portion of an SNMP message is encrypted before transmission\n          - Supported privacy protocols are AES and DES\n        type: str\n      privacy_passphrase:\n        required: true\n        description:\n          - Sets the passphrase to use for encrypt operations\n          - String with 8-49 characters\n        type: str\n      user_engine_id:\n        required: true\n        description:\n          - The SNMPv3 Engine ID is the unique identifier of an SNMP engine that belongs to an SNMP agent entity\n          - This value must be a hexadecimal string with an even number of 10 to 64 characters, excluding first two characters, 0x (example 0x01020304abcdef)\n        type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>  - hosts: servers\n    vars:\n      snmpv3_users:\n        - security_name: &quot;Sec1&quot;\n          auth_protocol: &quot;SHA&quot;\n          auth_passphrase: &quot;********&quot;\n          privacy_protocol: &quot;AES&quot;\n          privacy_passphrase: &quot;********&quot;\n          user_engine_id: &quot;123450abdcef&quot;\n    roles:\n       - create_snmpv3_users\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Gayathiri Devi Ramasamy (@Gayathirideviramasamy) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "update_snmpv3_users",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Create SNMPv3 Users</h1>\n<p>This module creates SNMPv3 users in a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  snmpv3_users:\n    required: true\n    description:\n      - List of SNMPv3 users to be added\n    type: list\n    suboptions:\n      security_name:\n        required: true\n        description:\n          - SNMPv3 security name associated with SNMPv3trap or SNMPv3Inform set on SNMPAlertProtocol\n          - Alphanumeric value with 1-32 characters\n        type: str\n      auth_protocol:\n        required: true\n        description:\n          - Sets the message digest algorithm to use for encoding the authorization passphrase\n          - The message digest is calculated over an appropriate portion of an SNMP message and is included as part of the message sent to the recipient\n          - Supported Auth protocols are MD5, SHA, and SHA256\n        type: str\n      auth_passphrase:\n        required: true\n        description:\n          - Sets the passphrase to use for sign operations\n          - String with 8-49 characters\n        type: str\n      privacy_protocol:\n        required: true\n        description:\n          - Sets the encryption algorithm to use for encoding the privacy passphrase\n          - A portion of an SNMP message is encrypted before transmission\n          - Supported privacy protocols are AES and DES\n        type: str\n      privacy_passphrase:\n        required: true\n        description:\n          - Sets the passphrase to use for encrypt operations\n          - String with 8-49 characters\n        type: str\n      user_engine_id:\n        required: true\n        description:\n          - The SNMPv3 Engine ID is the unique identifier of an SNMP engine that belongs to an SNMP agent entity\n          - This value must be a hexadecimal string with an even number of 10 to 64 characters, excluding first two characters, 0x (example 0x01020304abcdef)\n        type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    snmpv3_users:\n      - security_name: &quot;Sec1&quot;\n        auth_protocol: &quot;SHA&quot;\n        auth_passphrase: &quot;********&quot;\n        privacy_protocol: &quot;AES&quot;\n        privacy_passphrase: &quot;********&quot;\n        user_engine_id: &quot;123450abdcef&quot;\n  roles:\n     - update_snmpv3_users\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Gayathiri Devi Ramasamy (@Gayathirideviramasamy) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_ilo_backup_files",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get iLO Backup Files</h1>\n<p>Retrives iLO backup files from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role:</p>\n<pre><code>- hosts: servers\n  roles:\n     - get_ilo_backup_files\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Nagendra M (@nagendram399) Hewlett Packard Enterprise 2023</p>"
            },
            {
                "content_name": "verify_uefi_boot_order",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Verify UEFI Boot Order</h1>\n<p>This module will verify if the input boot order matches with the server boot order or not when BiosMode is Uefi</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    description:\n      - iLO IP of the server\n    type: str\n    default: NONE\n    required: true\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  uefi_boot_order:\n    required: true\n    description:\n      - Input UEFI Boot Order\n    type: list\n    default: NONE\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    uefi_boot_order: [&quot;NIC.FlexLOM.1.1.IPv4&quot;]\n  roles:\n    - verify_uefi_boot_order\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Prativa Nayak (@prativa-n) Hewlett Packard Enterprise 2021</p>"
            },
            {
                "content_name": "get_specified_logical_drives",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get Specified Logical Drives</h1>\n<p>Gets the specified logical drives details from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  logical_drives_names:\n    required: true\n    description:\n      - logical drives names whose deatils are to be retrieved from the server\n    type: list\n    elements: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    logical_drives_names: [&quot;LD1&quot;, &quot;LD2&quot;]\n  roles:\n     - get_specified_logical_drives\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "verify_bios_attributes",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Verify BIOS attributes</h1>\n<p>Verify bios attributes is to verify applied bios attributes in the server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  bios_attributes:\n    required: true\n    description: BIOS attributes to be verified\n    type: dict\n</code></pre>\n<h2>Dependencies</h2>\n<p>No Dependency.</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    bios_attributes:\n      SubNumaClustering: &quot;Disabled&quot;\n      WorkloadProfile: &quot;Virtualization-MaxPerformance&quot;\n  roles:\n    - verify_bios_attributes\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Gayathiri Devi Ramasamy (@Gayathirideviramasamy) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "smartcompinstall",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>smartcompinstall</h1>\n<p>To install and run Smart Component.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  roles:\n     - smartcompinstall\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_physical_drives",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get Physical Drives</h1>\n<p>Get the Physical drives from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - get_physical_drives\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "ilo_backup",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>iLO Backup</h1>\n<p>Performs iLO backup operation on a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role:</p>\n<pre><code>- hosts: servers\n  roles:\n     - ilo_backup\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Nagendra M (@nagendram399) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_pci_device_details",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get PCI Device Details</h1>\n<p>Get the PCI device details from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - get_pci_device_details\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "firmware_upload",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Firmware Upload</h1>\n<p>Uploads a firmware image to the reposistory on a given iLO</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  file_name:\n    required: true\n    description: \n      - Component filename when uploading it to iLO repository\n    type: str\n  image_uri:\n    required: true\n    description:\n      - Webserver path where the firmware component is located.\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    image_uri: &quot;http//10.xxx.xxx.xxx/ilo5_70.fwpkg&quot;\n    file_name: &quot;ilo6_70.fwpkg&quot;\n  roles:\n     - firmware_upload\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Nagendra M (@nagendram399) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "create_logical_drives",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Create Logical Drives</h1>\n<p>Creates logical drives specified by raid_details in a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  raid_details:\n    required: true\n    description:\n      - List of RAID details that need to be configured in the given server.\n    type: list\n    elements: dict\n    suboptions:\n      LogicalDriveName:\n        required: true\n        description:\n          - Logical drive name that needs to be configured in the given server\n        type: str\n      Raid:\n        required: true\n        description:\n          - Type of RAID\n        type: str\n      DataDrives:\n        required: true\n        description:\n          - Specifies the data drive details like media type, interface type, disk count and size\n        type: dict\n      DataDriveCount:\n        required: true\n        description:\n          - Number of physical drives that is required to create specified RAID\n        type: int\n      DataDriveMediaType:\n        required: true\n        description:\n          - Media type of the disk\n        type: str\n      DataDriveInterfaceType:\n        required: true\n        description:\n          - Interface type of the disk\n        type: str\n      DataDriveMinimumSizeGiB:\n        required: true\n        description:\n          - Minimum size required in the physical drive\n        type: int\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role:</p>\n<pre><code>- hosts: servers\n  vars:\n    raid_details: \n      - LogicalDriveName: &quot;LD1&quot;\n        Raid: &quot;Raid1&quot;\n        DataDrives:\n          DataDriveCount: 2\n          DataDriveMediaType: &quot;HDD&quot;\n          DataDriveInterfaceType: &quot;SAS&quot;\n          DataDriveMinimumSizeGiB: 0\n  roles:\n     - create_logical_drives\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Varini HP (@varini-hp) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "update_firmware_with_upload",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Update With Upload</h1>\n<p>Performs firmware update after uploading the firmware image to the firmware repository on a given iLO</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  file_name:\n    required: true\n    description: \n      - Component filename to be uploaded to the iLO repository\n    type: str\n  image_uri:\n    required: true\n    description:\n      - Webserver path where the firmware component is located\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    image_uri: &quot;http//10.xxx.xxx.xxx/ilo5_70.fwpkg&quot;\n    file_name: &quot;ilo6_70.fwpkg&quot;\n  roles:\n     - update_firmware_with_upload\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Nagendra M (@nagendram399) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "getcpuinven",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getcpuinven</h1>\n<p>Stores all the CPU inventory information of the system in a JSON output file</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: CpuInventory\n  roles:\n     - getcpuinven\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "erase_physical_drives",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Earse Physical Drives</h1>\n<p>Erases physical drives on a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency on other modules.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role:</p>\n<pre><code>- hosts: servers\n  roles:\n     - erase_physical_drives\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Nagendra M (@nagendram399) Hewlett Packard Enterprise 2023</p>"
            },
            {
                "content_name": "verify_specified_logical_drives",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Verify Specified Logical Drives</h1>\n<p>Verifying specified logical drives details in a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  raid_details:\n    required: true\n    description:\n      - RAID details that need to be verified in the given server\n    type: list\n    suboptions:\n      LogicalDriveName:\n        required: true\n        description:\n          - Logical drive name that needs to be configured in the given server\n        type: str\n      Raid:\n        required: true\n        description:\n          - Type of RAID\n        type: str\n      DataDrives:\n        required: true\n        description:\n          - Specifies the data drive details like media type, interface type, disk count and size\n        type: dict\n      DataDriveCount:\n        required: true\n        description:\n          - Number of physical drives that is required to create specified RAID\n        type: int\n      DataDriveMediaType:\n        required: true\n        description:\n          - Media type of the disk\n        type: str\n      DataDriveInterfaceType:\n        required: true\n        description:\n          - Interface type of the disk\n        type: str\n      DataDriveMinimumSizeGiB:\n        required: true\n        description:\n          - Minimum size required in the physical drive\n        type: int\n</code></pre>\n<h2>Dependencies</h2>\n<p>No Dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    raid_details:\n      - LogicalDriveName: LD1\n        Raid: Raid1\n        DataDrives:\n            DataDriveCount: 2\n            DataDriveMediaType: HDD\n            DataDriveInterfaceType: SAS\n            DataDriveMinimumSizeGiB: 0\n  roles:\n    - verify_specified_logical_drives\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Varni H P (@varini-hp) Hewlett Packard Enterprise 2021</p>"
            },
            {
                "content_name": "copyresulttoop",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>copyResulttoOp</h1>\n<p>Copies the results returned by another task into a json file.</p>\n<h2>Dependencies</h2>\n<p>The role creatOutput needs to be executed before this role.</p>\n<h2>Example Playbook</h2>\n<p>Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p>\n<pre><code>- hosts: servers\n  roles:\n     - copyResulttoOp\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "import_trusted_ca",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Import Trusted CA</h1>\n<p>Imports Trusted CA Certificate on given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  ca_file:\n    required: true\n    description:\n      - Absolute path of the CA Certificate\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    ca_file: &quot;/root/ca_file.crt&quot;\n  roles:\n     - import_trusted_ca\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2023 </p>"
            },
            {
                "content_name": "delete_specified_snmpv3_users",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Delete Specified SNMPv3 Users</h1>\n<p>Deleting specified SMNPv3 users in a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  snmpv3_usernames:\n    required: true\n    description:\n      - List of SNMPv3 user names that need to be deleted from the given server\n    type: list\n    elements: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    snmpv3_usernames:\n      - user1\n      - user2\n  roles:\n     - delete_specified_snmpv3_users\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Varni H P (@varini-hp) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "setdns",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>setDNS</h1>\n<p>Set the DNS IP for the iLO network.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>dns_server</code> IP should be provided. \n<code>dns_server</code> takes in maximum of 3 IPs. </p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     dns_server: 1.1.1.1 2.2.2.2 3.3.3.3\n  roles:\n     - setDNS\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "setdomainname",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>setDomainName</h1>\n<p>Set the Domain name for an iLO network</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>domain_name</code> needs to be passed.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     domain_name: ilohpe\n  roles:\n     - setDomainName\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "setntpservers",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>setNTPservers</h1>\n<p>Set the NTP Servers for the iLO network.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> need to mentioned. <code>attribute_name</code> and <code>attribute_value</code> need to be passed.\n<code>attribute_value</code> takes in maximum of 2 IPs.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     attribute_name: StaticNTPServers\n     attribute_value: 1.1.1.1 2.2.2.2\n  roles:\n     - setNTPservers\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "disablewinsreg",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>disableWINSReg</h1>\n<p>Disables the WINS Registration for an  iLO network</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>attribute_name</code> should be passed.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n    - attribute_name: WINSRegistration\n  roles:\n     - disableWINSReg\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "delete_specified_logical_drives",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Delete Specified Logical Drive</h1>\n<p>Deleting specified logical drives in a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n  logical_drives_names:\n    description:\n      - logical drives names which are to be deleted\n    type: list\n    elements: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  vars:\n    logical_drives_names: [&quot;LD1&quot;, &quot;LD2&quot;]\n  roles:\n     - delete_specified_logical_drives\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Varni H P (@varini-hp) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "getnicinven",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>getnicinven</h1>\n<p>Stores all the NIC inventory information of the system in a JSON output file.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned. <code>datatype</code> needs to be passed that serves as the keyword for the json file name.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n     datatype: NicInventory\n  roles:\n     - getnicinven\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "updaterole",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Role Name</h1>\n<p>A brief description of the role goes here.</p>\n<h2>Requirements</h2>\n<p>Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>\n<h2>Role Variables</h2>\n<p>A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>\n<h2>Dependencies</h2>\n<p>A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>\n<h2>Example Playbook</h2>\n<p>Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p>\n<pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"
            },
            {
                "content_name": "login",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Role Name</h1>\n<p>Creates a session for an account. Returns the session id.</p>\n<h2>Role Variables</h2>\n<p>Credentials of the iLO like <code>baseuri</code>, <code>username</code>, <code>password</code> needs to mentioned.</p>\n<h2>Example Playbook</h2>\n<p>An example of how to use the role: </p>\n<pre><code>- hosts: servers\n  vars:\n  loginname: ilouser\n  roles:\n     - Login\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>Bhavya B (@Bhavya06) Hewlett Packard Enterprise 2021 </p>"
            },
            {
                "content_name": "get_pci_slot_details",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Get PCI Slot Details</h1>\n<p>Get the PCI slot details from a given server</p>\n<h2>Role Variables</h2>\n<pre><code>  baseuri:\n    required: true\n    description:\n      - iLO IP of the server\n    type: str\n  username:\n    description:\n      - User for authentication with iLO.\n    type: str\n  password:\n    description:\n      - Password for authentication with iLO.\n    type: str\n  auth_token:\n    description:\n      - Security token for authentication with iLO.\n    type: str\n  cert_file:\n    description:\n      - absolute path to the server cert file\n    type: str\n  key_file:\n    description:\n      - absolute path to the server key file\n    type: str\n</code></pre>\n<h2>Dependencies</h2>\n<p>No dependency</p>\n<h2>Example Playbook</h2>\n<pre><code>- hosts: servers\n  roles:\n     - get_pci_slot_details\n</code></pre>\n<h2>License</h2>\n<p>BSD</p>\n<h2>Author Information</h2>\n<p>T S Kushal (@TSKushal) Hewlett Packard Enterprise 2023</p>"
            },
            {
                "content_name": "ilo_power",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Gayathiri Devi Ramasamy (@Gayathirideviramasamy)",
                            "T S Kushal (@TSKushal)",
                            "Varni H P (@varini-hp)",
                            "Prativa Nayak (@prativa-n)",
                            "Nagendra M (@nagendram399)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to perform SNMP related operations.",
                            "For use with HPE iLO SNMP operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_power.py",
                        "has_action": false,
                        "module": "ilo_power",
                        "options": [
                            {
                                "name": "auth_token",
                                "description": [
                                    "Security token for authentication with iLO."
                                ],
                                "type": "str",
                                "version_added": "2.3.0",
                                "version_added_collection": "hpe.ilo"
                            },
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "description": [
                                    "List of categories to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "cert_file",
                                "description": [
                                    "absolute path to the server cert file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "key_file",
                                "description": [
                                    "absolute path to the server key file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authentication with iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "timeout",
                                "default": 60,
                                "description": [
                                    "Timeout in seconds for URL requests to iLO."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "username",
                                "description": [
                                    "User for authentication with iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Performs Power related operations on iLO using Redfish APIs",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n  - name: Set Cold Boot\n    ilo_power:\n      category: Systems\n      command: SetColdBoot\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Get server PostState\n    ilo_power:\n      category: Systems\n      command: GetServerPostState\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "ilo_power",
                            "contains": [
                                {
                                    "name": "command",
                                    "contains": [
                                        {
                                            "name": "msg",
                                            "description": "Status of the operation performed on the iLO.",
                                            "type": "dict"
                                        },
                                        {
                                            "name": "ret",
                                            "description": "Return True/False based on whether the operation was performed succesfully.",
                                            "type": "bool"
                                        }
                                    ],
                                    "description": "Returns the output msg and whether the function executed successfully.",
                                    "type": "dict"
                                }
                            ],
                            "description": "Returns the status of the operation performed on the iLO.",
                            "returned": "always",
                            "type": "dict"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_snmp",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Gayathiri Devi Ramasamy (@Gayathirideviramasamy)",
                            "T S Kushal (@TSKushal)",
                            "Varni H P (@varini-hp)",
                            "Prativa Nayak (@prativa-n)",
                            "Nagendra M (@nagendram399)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to perform SNMP related operations.",
                            "For use with HPE iLO SNMP operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_snmp.py",
                        "has_action": false,
                        "module": "ilo_snmp",
                        "options": [
                            {
                                "name": "alert_destinations",
                                "description": [
                                    "List of alert destination that needs to be added in the given server"
                                ],
                                "elements": "dict",
                                "suboptions": [
                                    {
                                        "name": "alert_destination",
                                        "description": [
                                            "IP address/hostname/FQDN of remote management system that receives SNMP alerts"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    },
                                    {
                                        "name": "snmp_alert_protocol",
                                        "description": [
                                            "SNMP protocol associated with the AlertDestination",
                                            "The supported SNMP alert protocols are SNMPv1Trap, SNMPv3Trap, and SNMPv3Inform"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    },
                                    {
                                        "name": "trap_community",
                                        "description": [
                                            "Configuring trap community string",
                                            "This option is supported for SNMPv1Trap, SNMPv3Trap, and SNMPv3Inform alert protocols"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    }
                                ],
                                "type": "list"
                            },
                            {
                                "name": "auth_token",
                                "description": [
                                    "Security token for authentication with iLO."
                                ],
                                "type": "str",
                                "version_added": "2.3.0",
                                "version_added_collection": "hpe.ilo"
                            },
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "description": [
                                    "List of categories to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "cert_file",
                                "description": [
                                    "absolute path to the server cert file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "key_file",
                                "description": [
                                    "absolute path to the server key file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authentication with iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "snmpv3_usernames",
                                "description": [
                                    "List of SNMPv3 user names that need to be deleted from the given server"
                                ],
                                "elements": "str",
                                "type": "list"
                            },
                            {
                                "name": "snmpv3_users",
                                "description": [
                                    "List of SNMPv3 users that needs to be added in the given server"
                                ],
                                "elements": "dict",
                                "suboptions": [
                                    {
                                        "name": "auth_passphrase",
                                        "description": [
                                            "Sets the passphrase to use for sign operations",
                                            "String with 8-49 characters"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    },
                                    {
                                        "name": "auth_protocol",
                                        "description": [
                                            "Sets the message digest algorithm to use for encoding the authorization passphrase",
                                            "The message digest is calculated over an appropriate portion of an SNMP message and is included as part of the message sent to the recipient",
                                            "Supported Auth protocols are MD5, SHA, and SHA256"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    },
                                    {
                                        "name": "privacy_passphrase",
                                        "description": [
                                            "Sets the passphrase to use for encrypt operations",
                                            "String with 8-49 characters"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    },
                                    {
                                        "name": "privacy_protocol",
                                        "description": [
                                            "Sets the encryption algorithm to use for encoding the privacy passphrase",
                                            "A portion of an SNMP message is encrypted before transmission",
                                            "Supported privacy protocols are AES and DES"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    },
                                    {
                                        "name": "security_name",
                                        "description": [
                                            "SNMPv3 security name associated with SNMPv3trap or SNMPv3Inform set on SNMPAlertProtocol",
                                            "Alphanumeric value with 1-32 characters"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    },
                                    {
                                        "name": "user_engine_id",
                                        "description": [
                                            "The SNMPv3 Engine ID is the unique identifier of an SNMP engine that belongs to an SNMP agent entity",
                                            "This value must be a hexadecimal string with an even number of 10 to 64 characters, excluding first two characters, 0x (example 0x01020304abcdef)"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    }
                                ],
                                "type": "list"
                            },
                            {
                                "name": "timeout",
                                "default": 60,
                                "description": [
                                    "Timeout in seconds for URL requests to iLO."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "username",
                                "description": [
                                    "User for authentication with iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Performs SNMP related operations on iLO using Redfish APIs",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n  - name: Get SNMP V3 Users\n    ilo_snmp:\n      category: Manager\n      command: GetSnmpV3Users\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Get SNMP alert destinations\n    ilo_snmp:\n      category: Manager\n      command: GetSnmpAlertDestinations\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Deleting all the SNMPv3 users\n    ilo_snmp:\n      category: Manager\n      command: DeleteAllSNMPv3Users\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Deleting specified SNMPv3 users\n    ilo_snmp:\n      category: Manager\n      command: DeleteSpecifiedSNMPv3Users\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      snmpv3_usernames:\n        - user1\n        - user2\n\n  - name: Deleting all the SNMP alert destinations\n    ilo_snmp:\n      category: Manager\n      command: DeleteAllSNMPAlertDestinations\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Updating specified SNMPv3 users\n    ilo_snmp:\n      category: Manager\n      command: UpdateSNMPv3Users\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      snmpv3_users:\n        - security_name: \"Sec1\"\n          auth_protocol: \"SHA\"\n          auth_passphrase: \"********\"\n          privacy_protocol: \"AES\"\n          privacy_passphrase: \"********\"\n          user_engine_id: \"123450abdcef\"\n\n  - name: Creating SNMPv3 users\n    ilo_snmp:\n      category: Manager\n      command: CreateSNMPv3Users\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      snmpv3_users:\n        - security_name: \"Sec1\"\n          auth_protocol: \"SHA\"\n          auth_passphrase: \"********\"\n          privacy_protocol: \"AES\"\n          privacy_passphrase: \"********\"\n          user_engine_id: \"123450abdcef\"\n\n  - name: Creating SNMP alert destinations\n    ilo_snmp:\n      category: Manager\n      command: CreateSNMPAlertDestinations\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      alert_destinations:\n        - snmp_alert_protocol: \"SNMPv1Trap\"\n          trap_community: \"public\"\n          alert_destination: \"************\"\n          security_name: \"Sec1\"\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "ilo_snmp",
                            "contains": [
                                {
                                    "name": "command",
                                    "contains": [
                                        {
                                            "name": "msg",
                                            "description": "Status of the operation performed on the iLO.",
                                            "type": "dict"
                                        },
                                        {
                                            "name": "ret",
                                            "description": "Return True/False based on whether the operation was performed succesfully.",
                                            "type": "bool"
                                        }
                                    ],
                                    "description": "Returns the output msg and whether the function executed successfully.",
                                    "type": "dict"
                                }
                            ],
                            "description": "Returns the status of the operation performed on the iLO.",
                            "returned": "always",
                            "type": "dict"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_device",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Gayathiri Devi Ramasamy (@Gayathirideviramasamy)",
                            "T S Kushal (@TSKushal)",
                            "Varni H P (@varini-hp)",
                            "Prativa Nayak (@prativa-n)",
                            "Nagendra M (@nagendram399)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to perform SNMP related operations.",
                            "For use with HPE iLO SNMP operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_device.py",
                        "has_action": false,
                        "module": "ilo_device",
                        "options": [
                            {
                                "name": "auth_token",
                                "description": [
                                    "Security token for authentication with iLO."
                                ],
                                "type": "str",
                                "version_added": "2.3.0",
                                "version_added_collection": "hpe.ilo"
                            },
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "description": [
                                    "List of categories to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "cert_file",
                                "description": [
                                    "absolute path to the server cert file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "key_file",
                                "description": [
                                    "absolute path to the server key file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authentication with iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "timeout",
                                "default": 60,
                                "description": [
                                    "Timeout in seconds for URL requests to iLO."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "username",
                                "description": [
                                    "User for authentication with iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Performs Device related operations on iLO using Redfish APIs",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n  - name: Get Device Inventory Information\n    ilo_device:\n      category: Chassis\n      command: GetDeviceInventoryInfo\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "ilo_device",
                            "contains": [
                                {
                                    "name": "command",
                                    "contains": [
                                        {
                                            "name": "msg",
                                            "description": "Status of the operation performed on the iLO.",
                                            "type": "dict"
                                        },
                                        {
                                            "name": "ret",
                                            "description": "Return True/False based on whether the operation was performed succesfully.",
                                            "type": "bool"
                                        }
                                    ],
                                    "description": "Returns the output msg and whether the function executed successfully.",
                                    "type": "dict"
                                }
                            ],
                            "description": "Returns the status of the operation performed on the iLO.",
                            "returned": "always",
                            "type": "dict"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_redfish_config",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Bhavya B (@bhavya06)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to set or update a configuration attribute.",
                            "For use with HPE iLO operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_redfish_config.py",
                        "has_action": false,
                        "module": "ilo_redfish_config",
                        "options": [
                            {
                                "name": "attribute_name",
                                "description": [
                                    "Name of the attribute to be configured."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "attribute_value",
                                "description": [
                                    "Value of the attribute to be configured."
                                ],
                                "required": false,
                                "type": "str"
                            },
                            {
                                "name": "auth_token",
                                "description": [
                                    "Security token for authentication with OOB controller."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "choices": [
                                    "Manager"
                                ],
                                "description": [
                                    "Command category to execute on iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authentication with iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "timeout",
                                "default": 10,
                                "description": [
                                    "Timeout in seconds for URL requests to iLO controller."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "username",
                                "description": [
                                    "User for authentication with iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Sets or updates configuration attributes on HPE iLO with Redfish OEM extensions",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n  - name: Disable WINS Registration\n    community.general.ilo_redfish_config:\n      category: Manager\n      command: SetWINSReg\n      baseuri: 15.X.X.X\n      username: Admin\n      password: Testpass123\n      attribute_name: WINSRegistration\n\n  - name: Set Time Zone\n    community.general.ilo_redfish_config:\n      category: Manager\n      command: SetTimeZone\n      baseuri: 15.X.X.X\n      username: Admin\n      password: Testpass123\n      attribute_name: TimeZone\n      attribute_value: Chennai\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "msg",
                            "description": "Message with action result or error description",
                            "returned": "always",
                            "sample": "Action was successful",
                            "type": "str"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_fwupdate_command",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Bhavya B (@bhavya06)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to perform an action.",
                            "For use with HPE iLO operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_fwupdate_command.py",
                        "has_action": false,
                        "module": "ilo_fwupdate_command",
                        "options": [
                            {
                                "name": "attribute_name",
                                "description": [
                                    "Name of the attribute to be configured."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "attribute_value",
                                "description": [
                                    "Value of the attribute to be configured."
                                ],
                                "required": false,
                                "type": "str"
                            },
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "choices": [
                                    "UpdateService"
                                ],
                                "description": [
                                    "Command category to execute on iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "componentsig",
                                "description": [
                                    "Component signature file path needed by iLO to authenticate the component file. If not provided, the command will try to find the signature file from component file path."
                                ],
                                "required": false
                            },
                            {
                                "name": "force",
                                "description": [
                                    "Add this flag to force upload components with the same name already on the repository."
                                ],
                                "required": false
                            },
                            {
                                "name": "fwpkg_file",
                                "description": [
                                    "Absolute path of the firmware package file that the user wishes to attach."
                                ],
                                "required": false
                            },
                            {
                                "name": "install_filename",
                                "description": [
                                    "Name of the file package that needs to be installed."
                                ],
                                "required": false
                            },
                            {
                                "name": "overwrite",
                                "description": [
                                    "Permission to overwrite a file present of the server with same name."
                                ],
                                "required": false
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authenticating to iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "remote",
                                "description": [
                                    "Remote file path where the file is present."
                                ],
                                "required": false
                            },
                            {
                                "name": "timeout",
                                "default": 10,
                                "description": [
                                    "Timeout in seconds for HTTP requests to iLO."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "tover",
                                "description": [
                                    "Use this flag if the server you are currently logged into has a TPM chip installed."
                                ],
                                "required": false
                            },
                            {
                                "name": "update_srs",
                                "description": [
                                    "The component uploaded will become a part of the system recovery set (srs)."
                                ],
                                "required": false
                            },
                            {
                                "name": "username",
                                "description": [
                                    "Username for authenticating to iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Sets or updates configuration attributes on HPE iLO with Redfish OEM extensions",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n  - name: Flash Firmware package for Bios\n    ilo_fwupdate_command:\n        category: UpdateService\n        command: Flashfwpkg\n        baseuri: \"15.x.x.x\"\n        username: \"Admin\"\n        password: \"testpass123\"\n        fwpkg_file: Bios_fwpkgfile.fwpkg\n\n  - name: Flash Firmware package for iLO\n    ilo_fwupdate_command:\n        category: UpdateService\n        command: Flashfwpkg\n        baseuri: \"15.x.x.x\"\n        username: \"Admin\"\n        password: \"testpass123\"\n        fwpkg_file: ilo_fwpkgfile.fwpkg\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "msg",
                            "description": "Message with action result or error description",
                            "returned": "always",
                            "sample": "Action was successful",
                            "type": "str"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_boot",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Gayathiri Devi Ramasamy (@Gayathirideviramasamy)",
                            "T S Kushal (@TSKushal)",
                            "Varni H P (@varini-hp)",
                            "Prativa Nayak (@prativa-n)",
                            "Nagendra M (@nagendram399)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to perform SNMP related operations.",
                            "For use with HPE iLO SNMP operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_boot.py",
                        "has_action": false,
                        "module": "ilo_boot",
                        "options": [
                            {
                                "name": "auth_token",
                                "description": [
                                    "Security token for authentication with iLO."
                                ],
                                "type": "str",
                                "version_added": "2.3.0",
                                "version_added_collection": "hpe.ilo"
                            },
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "description": [
                                    "List of categories to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "cert_file",
                                "description": [
                                    "absolute path to the server cert file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "key_file",
                                "description": [
                                    "absolute path to the server key file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authentication with iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "timeout",
                                "default": 60,
                                "description": [
                                    "Timeout in seconds for URL requests to iLO."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "uefi_boot_order",
                                "description": [
                                    "Input UEFI Boot Order"
                                ],
                                "required": false,
                                "type": "list"
                            },
                            {
                                "name": "username",
                                "description": [
                                    "User for authentication with iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Performs Boot related operations on iLO using Redfish APIs",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n  - name: Get network boot settings\n    ilo_boot:\n      category: Systems\n      command: GetBootSettings\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Verify UEFI boot order\n    ilo_boot:\n      category: Systems\n      command: VerifyUefiBootOrder\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      uefi_boot_order: [\"Generic.USB.1.1\"]\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "ilo_boot",
                            "contains": [
                                {
                                    "name": "command",
                                    "contains": [
                                        {
                                            "name": "msg",
                                            "description": "Status of the operation performed on the iLO.",
                                            "type": "dict"
                                        },
                                        {
                                            "name": "ret",
                                            "description": "Return True/False based on whether the operation was performed succesfully.",
                                            "type": "bool"
                                        }
                                    ],
                                    "description": "Returns the output msg and whether the function executed successfully.",
                                    "type": "dict"
                                }
                            ],
                            "description": "Returns the status of the operation performed on the iLO.",
                            "returned": "always",
                            "type": "dict"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_security",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Gayathiri Devi Ramasamy (@Gayathirideviramasamy)",
                            "T S Kushal (@TSKushal)",
                            "Varni H P (@varini-hp)",
                            "Prativa Nayak (@prativa-n)",
                            "Nagendra M (@nagendram399)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to perform SNMP related operations.",
                            "For use with HPE iLO SNMP operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_security.py",
                        "has_action": false,
                        "module": "ilo_security",
                        "options": [
                            {
                                "name": "auth_token",
                                "description": [
                                    "Security token for authentication with iLO."
                                ],
                                "type": "str",
                                "version_added": "2.3.0",
                                "version_added_collection": "hpe.ilo"
                            },
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "ca_file",
                                "description": [
                                    "Absolute path of the CA Certificate"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "description": [
                                    "List of categories to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "cert_file",
                                "description": [
                                    "absolute path to the server cert file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "key_file",
                                "description": [
                                    "absolute path to the server key file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authentication with iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "spdm_settings",
                                "description": [
                                    "Dictionary with value of GlobalComponentIntegrity and ComponentIntegrityPolicy parameter to be configured in the given server"
                                ],
                                "type": "dict"
                            },
                            {
                                "name": "timeout",
                                "default": 60,
                                "description": [
                                    "Timeout in seconds for URL requests to iLO."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "user_cert_file",
                                "description": [
                                    "Absolute path of the User Certificate"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "username",
                                "description": [
                                    "User for authentication with iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Performs Security related operations on iLO using Redfish APIs",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n  - name: Get Trusted CA Certificates\n    ilo_security:\n      category: Manager\n      command: GetTrustedCACertificates\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Enable Certificate Login\n    ilo_security:\n      category: Manager\n      command: EnableCertificateLogin\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Import Trusted CA\n    ilo_security:\n      category: Manager\n      command: ImportTrustedCA\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      ca_file: \"{{ ca_file }}\"\n\n  - name: Map User Certificate\n    ilo_security:\n      category: Manager\n      command: MapUserCertificate\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      user_cert_file: \"{{ user_cert_file }}\"\n\n  - name: Set SPDM Settings\n    ilo_security:\n      category: Systems\n      command: SetSPDMSettings\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      spdm_settings:\n        global_component_integrity: \"Enabled\"\n        component_integrity_policy: \"NoPolicy\"\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "ilo_security",
                            "contains": [
                                {
                                    "name": "command",
                                    "contains": [
                                        {
                                            "name": "msg",
                                            "description": "Status of the operation performed on the iLO.",
                                            "type": "dict"
                                        },
                                        {
                                            "name": "ret",
                                            "description": "Return True/False based on whether the operation was performed succesfully.",
                                            "type": "bool"
                                        }
                                    ],
                                    "description": "Returns the output msg and whether the function executed successfully.",
                                    "type": "dict"
                                }
                            ],
                            "description": "Returns the status of the operation performed on the iLO.",
                            "returned": "always",
                            "type": "dict"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_storage",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Gayathiri Devi Ramasamy (@Gayathirideviramasamy)",
                            "T S Kushal (@TSKushal)",
                            "Varni H P (@varini-hp)",
                            "Prativa Nayak (@prativa-n)",
                            "Nagendra M (@nagendram399)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to perform SNMP related operations.",
                            "For use with HPE iLO SNMP operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_storage.py",
                        "has_action": false,
                        "module": "ilo_storage",
                        "options": [
                            {
                                "name": "auth_token",
                                "description": [
                                    "Security token for authentication with iLO."
                                ],
                                "type": "str",
                                "version_added": "2.3.0",
                                "version_added_collection": "hpe.ilo"
                            },
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "description": [
                                    "List of categories to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "cert_file",
                                "description": [
                                    "absolute path to the server cert file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "key_file",
                                "description": [
                                    "absolute path to the server key file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "logical_drives_names",
                                "description": [
                                    "logical drives names which are to be deleted"
                                ],
                                "elements": "str",
                                "type": "list"
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authentication with iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "raid_details",
                                "description": [
                                    "List of RAID details that need to be configured in the given server."
                                ],
                                "elements": "dict",
                                "suboptions": [
                                    {
                                        "name": "DataDriveCount",
                                        "description": [
                                            "Number of physical drives that is required to create specified RAID"
                                        ],
                                        "required": true,
                                        "type": "int"
                                    },
                                    {
                                        "name": "DataDriveInterfaceType",
                                        "description": [
                                            "Interface type of the disk"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    },
                                    {
                                        "name": "DataDriveMediaType",
                                        "description": [
                                            "Media type of the disk"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    },
                                    {
                                        "name": "DataDriveMinimumSizeGiB",
                                        "description": [
                                            "Minimum size required in the physical drive"
                                        ],
                                        "required": true,
                                        "type": "int"
                                    },
                                    {
                                        "name": "DataDrives",
                                        "description": [
                                            "Specifies the data drive details like media type, interface type, disk count and size"
                                        ],
                                        "required": true,
                                        "type": "dict"
                                    },
                                    {
                                        "name": "LogicalDriveName",
                                        "description": [
                                            "Logical drive name that needs to be configured in the given server"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    },
                                    {
                                        "name": "Raid",
                                        "description": [
                                            "Type of RAID"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    }
                                ],
                                "type": "list"
                            },
                            {
                                "name": "timeout",
                                "default": 60,
                                "description": [
                                    "Timeout in seconds for URL requests to iLO."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "username",
                                "description": [
                                    "User for authentication with iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Performs Storage related operations on iLO using Redfish APIs",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n  - name: Get physical drive details\n    ilo_storage:\n      category: Systems\n      command: GetPhysicalDrives\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Get logical drive details\n    ilo_storage:\n      category: Systems\n      command: GetLogicalDrives\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Get logical drive details with array controllers\n    ilo_storage:\n      category: Systems\n      command: GetLogicalDrivesWithArrayControllers\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Get specified logical drives details\n    ilo_storage:\n      category: Systems\n      command: GetSpecifiedLogicalDrives\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      logical_drives_names: [\"LD1\", \"LD2\"]\n\n  - name: Create logical drive\n    ilo_storage:\n      category: Systems\n      command: CreateLogicalDrives\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      raid_details:\n        - LogicalDriveName: LD1\n          Raid: Raid1\n          DataDrives:\n              DataDriveCount: 2\n              DataDriveMediaType: HDD\n              DataDriveInterfaceType: SAS\n              DataDriveMinimumSizeGiB: 0\n\n  - name: Create logical drives with particular physical drives\n    ilo_storage:\n      category: Systems\n      command: CreateLogicalDrivesWithParticularPhysicalDrives\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      raid_details:\n        - LogicalDriveName: LD1\n          Raid: Raid1\n          CapacityGB: 1200,\n          DataDrives: [\"1I:1:1\", \"1I:1:2\"]\n\n  - name: Delete all logical drives\n    ilo_storage:\n      category: Systems\n      command: DeleteAllLogicalDrives\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Delete specified logical drives\n    ilo_storage:\n      category: Systems\n      command: DeleteSpecifiedLogicalDrives\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      logical_drives_names: [\"LD1\", \"LD2\"]\n\n  - name: Verify logical drives\n    ilo_storage:\n      category: Systems\n      command: VerifyLogicalDrives\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      raid_details:\n        - LogicalDriveName: LD1\n          Raid: Raid1\n          DataDrives:\n              DataDriveCount: 2\n              DataDriveMediaType: HDD\n              DataDriveInterfaceType: SAS\n              DataDriveMinimumSizeGiB: 0\n\n  - name: Verify specified logical drives\n    ilo_storage:\n      category: Systems\n      command: VerifySpecifiedLogicalDrives\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      raid_details:\n        - LogicalDriveName: LD1\n          Raid: Raid1\n          DataDrives:\n              DataDriveCount: 2\n              DataDriveMediaType: HDD\n              DataDriveInterfaceType: SAS\n              DataDriveMinimumSizeGiB: 0\n\n  - name: Get USB information\n    ilo_storage:\n      category: Systems\n      command: GetUSBInfo\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Erase Physical Drives\n    ilo_storage:\n      category: Systems\n      command: ErasePhysicalDrives\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Get Drive Operating Mode\n    ilo_storage:\n      category: Systems\n      command: GetDriveOperatingMode\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "ilo_storage",
                            "contains": [
                                {
                                    "name": "command",
                                    "contains": [
                                        {
                                            "name": "msg",
                                            "description": "Status of the operation performed on the iLO.",
                                            "type": "dict"
                                        },
                                        {
                                            "name": "ret",
                                            "description": "Return True/False based on whether the operation was performed succesfully.",
                                            "type": "bool"
                                        }
                                    ],
                                    "description": "Returns the output msg and whether the function executed successfully.",
                                    "type": "dict"
                                }
                            ],
                            "description": "Returns the status of the operation performed on the iLO.",
                            "returned": "always",
                            "type": "dict"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_redfish_command",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Bhavya B (@bhavya06)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to perform an action.",
                            "For use with HPE iLO operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_redfish_command.py",
                        "has_action": false,
                        "module": "ilo_redfish_command",
                        "options": [
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "choices": [
                                    "UpdateService"
                                ],
                                "description": [
                                    "Command category to execute on iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "componentsig",
                                "description": [
                                    "compsig file"
                                ],
                                "required": false
                            },
                            {
                                "name": "force",
                                "description": [
                                    "forcefully upload"
                                ],
                                "required": false
                            },
                            {
                                "name": "fwpkg_file",
                                "description": [
                                    "Absolute path of the firmware package file that the user wishes to attach."
                                ],
                                "required": true
                            },
                            {
                                "name": "overwrite",
                                "description": [
                                    "Permission to overwrite a file present of the server with same name."
                                ],
                                "required": false
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authenticating to iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "timeout",
                                "default": 10,
                                "description": [
                                    "Timeout in seconds for HTTP requests to iLO."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "tover",
                                "description": [
                                    "tpm override flag"
                                ],
                                "required": false
                            },
                            {
                                "name": "update_srs",
                                "description": [
                                    "The component uploaded will become a part of the system recovery set (srs)."
                                ],
                                "required": false
                            },
                            {
                                "name": "username",
                                "description": [
                                    "Username for authenticating to iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Sets or updates configuration attributes on HPE iLO with Redfish OEM extensions",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n  - name: Flash Firmware package for Bios\n    community.general.ilo_redfish_command:\n        category: UpdateService\n        command: Flashfwpkg\n        baseuri: \"15.x.x.x\"\n        username: \"Admin\"\n        password: \"testpass123\"\n        fwpkg_file: Bios_fwpkgfile.fwpkg\n\n  - name: Flash Firmware package for iLO\n    community.general.ilo_redfish_command:\n        category: UpdateService\n        command: Flashfwpkg\n        baseuri: \"15.x.x.x\"\n        username: \"Admin\"\n        password: \"testpass123\"\n        fwpkg_file: ilo_fwpkgfile.fwpkg\n\n  - name: Upload Firmware package onto server\n    community.general.ilo_redfish_command:\n        category: UpdateService\n        command: UploadComponent\n        baseuri: \"15.x.x.x\"\n        username: \"Admin\"\n        password: \"testpass123\"\n        fwpkg_file: ilo_fwpkgfile.fwpkg\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "msg",
                            "description": "Message with action result or error description",
                            "returned": "always",
                            "sample": "Action was successful",
                            "type": "str"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_firmware",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Gayathiri Devi Ramasamy (@Gayathirideviramasamy)",
                            "T S Kushal (@TSKushal)",
                            "Varni H P (@varini-hp)",
                            "Prativa Nayak (@prativa-n)",
                            "Nagendra M (@nagendram399)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to perform SNMP related operations.",
                            "For use with HPE iLO SNMP operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_firmware.py",
                        "has_action": false,
                        "module": "ilo_firmware",
                        "options": [
                            {
                                "name": "auth_token",
                                "description": [
                                    "Security token for authentication with iLO."
                                ],
                                "type": "str",
                                "version_added": "2.3.0",
                                "version_added_collection": "hpe.ilo"
                            },
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "description": [
                                    "List of categories to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "cert_file",
                                "description": [
                                    "Absolute path to the server cert file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "file_name",
                                "description": [
                                    "Component filename to be uploaded to the iLO repository"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "image_uri",
                                "description": [
                                    "Webserver path where the firmware component is located."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "install_set_attributes",
                                "description": [
                                    "Name, description and sequence of the install set to be created"
                                ],
                                "required": true,
                                "suboptions": [
                                    {
                                        "name": "Description",
                                        "description": [
                                            "Description of the install set"
                                        ],
                                        "type": "str"
                                    },
                                    {
                                        "name": "install_set_name",
                                        "description": [
                                            "Name of the install set"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    },
                                    {
                                        "name": "install_set_sequence",
                                        "description": [
                                            "List of firmwares to be installed"
                                        ],
                                        "required": true,
                                        "suboptions": [
                                            {
                                                "name": "Filename",
                                                "description": [
                                                    "Firmware component filename present in the iLO repository"
                                                ],
                                                "required": true,
                                                "type": "str"
                                            },
                                            {
                                                "name": "Name",
                                                "description": [
                                                    "Name of the task"
                                                ],
                                                "required": true,
                                                "type": "str"
                                            },
                                            {
                                                "name": "UpdatableBy",
                                                "description": [
                                                    "List of update agents"
                                                ],
                                                "elements": "str",
                                                "type": "list"
                                            }
                                        ],
                                        "type": "list"
                                    }
                                ],
                                "type": "dict"
                            },
                            {
                                "name": "key_file",
                                "description": [
                                    "Absolute path to the server key file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "maintenance_window_details",
                                "description": [
                                    "Name, description, start and end time of maintenance window to be created"
                                ],
                                "required": true,
                                "suboptions": [
                                    {
                                        "name": "Description",
                                        "description": [
                                            "Description of maintenance window"
                                        ],
                                        "type": "str"
                                    },
                                    {
                                        "name": "Expire",
                                        "description": [
                                            "End time of the maintenance window"
                                        ],
                                        "type": "str"
                                    },
                                    {
                                        "name": "Name",
                                        "description": [
                                            "Name of the maintenance window"
                                        ],
                                        "required": true,
                                        "type": "str"
                                    },
                                    {
                                        "name": "StartAfter",
                                        "description": [
                                            "Start time of the maintenance window"
                                        ],
                                        "type": "str"
                                    }
                                ],
                                "type": "dict"
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authentication with iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "timeout",
                                "default": 60,
                                "description": [
                                    "Timeout in seconds for URL requests to iLO."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "username",
                                "description": [
                                    "User for authentication with iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Performs Firmware related operations on iLO using Redfish APIs",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n  - name: Perform firmware upgrade on the server using image uri\n    ilo_firmware:\n      category: UpdateService\n      command: UpdateFirmwareWithUpload\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      image_uri: \"http://***.***.***.***:8088/ilo5_278.fwpkg\"\n      file_name: \"Sample filename\"\n\n  - name: Perform firmware upgrade on the server using install set without maintenance window\n    ilo_firmware:\n      category: UpdateService\n      command: UpdateFirmwareThroughInstallSet\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      install_set_attributes:\n        Name: \"Install set name\"\n        Description: \"Install set description\"\n        Install_set_sequence: [\n                  {\n                      \"Name\": \"ilo\",\n                      \"Filename\": \"ilo6_110.fwpkg\",\n                      \"UpdatableBy\": [\"Bmc\",\"Uefi\",\"RuntimeAgent\"]\n                  },\n                  {\n                      \"Name\": \"OCP adapter\",\n                      \"Filename\": \"OCPAdapterfile\"\n                  }]\n\n  - name: Perform firmware upgrade on the server using install set with maintenance window\n    ilo_firmware:\n      category: UpdateService\n      command: UpdateFirmwareThroughInstallSet\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      install_set_attributes:\n        Name: \"Install set name\"\n        Description: \"Install set description\"\n        Install_set_sequence: [\n                  {\n                      \"Name\": \"ilo\",\n                      \"Filename\": \"ilo6_110.fwpkg\",\n                      \"UpdatableBy\": [\"Bmc\",\"Uefi\",\"RuntimeAgent\"]\n                  },\n                  {\n                      \"Name\": \"OCP adapter\",\n                      \"Filename\": \"OCPAdapterfile\"\n                  }]\n      maintenance_window_details: {\n              \"Description\": \"Sample description of maintenance window\",\n              \"Name\": \"Maintenance window name\",\n              \"StartAfter\": \"2023-01-19T18:35:00Z\",\n              \"Expire\": \"2023-01-19T19:30:00Z\"\n          }\n\n  - name: Perform firmware upload to ilo repository\n    ilo_firmware:\n      category: UpdateService\n      command: FirmwareUpload\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      image_uri: \"http://***.***.***.***:8088/ilo5_278.fwpkg\"\n      file_name: \"Sample filename\"\n\n  - name: Get firmware upgrade/upload status\n    ilo_firmware:\n      category: TaskService\n      command: GetFirmwareStatus\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "ilo_firmware",
                            "contains": [
                                {
                                    "name": "command",
                                    "contains": [
                                        {
                                            "name": "msg",
                                            "description": "Status of the operation performed on the iLO.",
                                            "type": "dict"
                                        },
                                        {
                                            "name": "ret",
                                            "description": "Return True/False based on whether the operation was performed succesfully.",
                                            "type": "bool"
                                        }
                                    ],
                                    "description": "Returns the output msg and whether the function executed successfully.",
                                    "type": "dict"
                                }
                            ],
                            "description": "Returns the status of the operation performed on the iLO.",
                            "returned": "always",
                            "type": "dict"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_manage",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Gayathiri Devi Ramasamy (@Gayathirideviramasamy)",
                            "T S Kushal (@TSKushal)",
                            "Varni H P (@varini-hp)",
                            "Prativa Nayak (@prativa-n)",
                            "Nagendra M (@nagendram399)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to perform SNMP related operations.",
                            "For use with HPE iLO SNMP operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_manage.py",
                        "has_action": false,
                        "module": "ilo_manage",
                        "options": [
                            {
                                "name": "auth_token",
                                "description": [
                                    "Security token for authentication with iLO."
                                ],
                                "type": "str",
                                "version_added": "2.3.0",
                                "version_added_collection": "hpe.ilo"
                            },
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "description": [
                                    "List of categories to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "cert_file",
                                "description": [
                                    "absolute path to the server cert file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "key_file",
                                "description": [
                                    "absolute path to the server key file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authentication with iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "required_permissions",
                                "default": [
                                    "HostBIOSConfigPriv",
                                    "HostNICConfigPriv",
                                    "HostStorageConfigPriv"
                                ],
                                "description": [
                                    "permissions to be checked against provided user"
                                ],
                                "elements": "str",
                                "type": "list"
                            },
                            {
                                "name": "timeout",
                                "default": 60,
                                "description": [
                                    "Timeout in seconds for URL requests to iLO."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "username",
                                "description": [
                                    "User for authentication with iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Performs Management related operations on iLO using Redfish APIs",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n  - name: Wait for iLO Reboot Completion\n    ilo_manage:\n      category: Systems\n      command: WaitforiLORebootCompletion\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Check User Privileges\n    ilo_manage:\n      category: Systems\n      command: CheckUserPrivileges\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Perform factory reset on the iLO\n    ilo_manage:\n      category: Manager\n      command: iLOFactoryReset\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Get the iLO backup file(s) details\n    ilo_manage:\n      category: Manager\n      command: GetiLOBackupFiles\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Delete iLO backup file(s) if already present\n    ilo_manage:\n      category: Manager\n      command: DeleteiLOBackupFiles\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Perform backup operation on the iLO\n    ilo_manage:\n      category: Manager\n      command: iLOBackup\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Perform restore operation on the iLO\n    ilo_manage:\n      category: Manager\n      command: iLORestore\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Get HostName from the iLO\n    ilo_manage:\n      category: Manager\n      command: GetHostName\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "ilo_manage",
                            "contains": [
                                {
                                    "name": "command",
                                    "contains": [
                                        {
                                            "name": "msg",
                                            "description": "Status of the operation performed on the iLO.",
                                            "type": "dict"
                                        },
                                        {
                                            "name": "ret",
                                            "description": "Return True/False based on whether the operation was performed succesfully.",
                                            "type": "bool"
                                        }
                                    ],
                                    "description": "Returns the output msg and whether the function executed successfully.",
                                    "type": "dict"
                                }
                            ],
                            "description": "Returns the status of the operation performed on the iLO.",
                            "returned": "always",
                            "type": "dict"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_network",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Gayathiri Devi Ramasamy (@Gayathirideviramasamy)",
                            "T S Kushal (@TSKushal)",
                            "Varni H P (@varini-hp)",
                            "Prativa Nayak (@prativa-n)",
                            "Nagendra M (@nagendram399)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to perform SNMP related operations.",
                            "For use with HPE iLO SNMP operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_network.py",
                        "has_action": false,
                        "module": "ilo_network",
                        "options": [
                            {
                                "name": "auth_token",
                                "description": [
                                    "Security token for authentication with iLO."
                                ],
                                "type": "str",
                                "version_added": "2.3.0",
                                "version_added_collection": "hpe.ilo"
                            },
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "description": [
                                    "List of categories to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "cert_file",
                                "description": [
                                    "absolute path to the server cert file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "key_file",
                                "description": [
                                    "absolute path to the server key file"
                                ],
                                "type": "str"
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authentication with iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "timeout",
                                "default": 60,
                                "description": [
                                    "Timeout in seconds for URL requests to iLO."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "username",
                                "description": [
                                    "User for authentication with iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Performs Network related operations on iLO using Redfish APIs",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n\n  - name: Get PCI device details\n    ilo_network:\n      category: Systems\n      command: GetPCIDevices\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Get PCI slot details\n    ilo_network:\n      category: Systems\n      command: GetPCISlots\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n\n  - name: Get physical network adapter details\n    ilo_network:\n      category: Systems\n      command: GetNetworkAdapters\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "ilo_network",
                            "contains": [
                                {
                                    "name": "command",
                                    "contains": [
                                        {
                                            "name": "msg",
                                            "description": "Status of the operation performed on the iLO.",
                                            "type": "dict"
                                        },
                                        {
                                            "name": "ret",
                                            "description": "Return True/False based on whether the operation was performed succesfully.",
                                            "type": "bool"
                                        }
                                    ],
                                    "description": "Returns the output msg and whether the function executed successfully.",
                                    "type": "dict"
                                }
                            ],
                            "description": "Returns the status of the operation performed on the iLO.",
                            "returned": "always",
                            "type": "dict"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_redfish_info",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": [
                            "Bhavya B (@bhavya06)"
                        ],
                        "collection": "hpe.ilo",
                        "description": [
                            "Builds Redfish URIs locally and sends them to iLO to get information back.",
                            "For use with HPE iLO operations that require Redfish OEM extensions."
                        ],
                        "filename": "/tmp/tmphvk00_zj/ansible_collections/hpe/ilo/plugins/modules/ilo_redfish_info.py",
                        "has_action": false,
                        "module": "ilo_redfish_info",
                        "options": [
                            {
                                "name": "auth_token",
                                "description": [
                                    "Security token for authentication with iLO."
                                ],
                                "type": "str",
                                "version_added": "2.3.0",
                                "version_added_collection": "hpe.ilo"
                            },
                            {
                                "name": "baseuri",
                                "description": [
                                    "Base URI of iLO."
                                ],
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "category",
                                "description": [
                                    "List of categories to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "command",
                                "description": [
                                    "List of commands to execute on iLO."
                                ],
                                "elements": "str",
                                "required": true,
                                "type": "list"
                            },
                            {
                                "name": "password",
                                "description": [
                                    "Password for authentication with iLO."
                                ],
                                "type": "str"
                            },
                            {
                                "name": "timeout",
                                "default": 10,
                                "description": [
                                    "Timeout in seconds for URL requests to iLO."
                                ],
                                "type": "int"
                            },
                            {
                                "name": "username",
                                "description": [
                                    "User for authentication with iLO."
                                ],
                                "type": "str"
                            }
                        ],
                        "short_description": "Gathers server information through iLO using Redfish APIs",
                        "version_added": "4.2.0",
                        "version_added_collection": "hpe.ilo"
                    },
                    "examples": "\n  - name: Get iLO Sessions\n    community.general.ilo_redfish_info:\n      category: Sessions\n      command: GetiLOSessions\n      baseuri: \"{{ baseuri }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n    register: result_sessions\n",
                    "metadata": null,
                    "return": [
                        {
                            "name": "ilo_redfish_info",
                            "contains": [
                                {
                                    "name": "GetiLOSessions",
                                    "contains": [
                                        {
                                            "name": "msg",
                                            "contains": [
                                                {
                                                    "name": "Description",
                                                    "description": "Provides a description of the resource.",
                                                    "type": "str"
                                                },
                                                {
                                                    "name": "Id",
                                                    "description": "The sessionId.",
                                                    "type": "str"
                                                },
                                                {
                                                    "name": "Name",
                                                    "description": "The name of the resource.",
                                                    "type": "str"
                                                },
                                                {
                                                    "name": "UserName",
                                                    "description": "Name to use to log in to the management processor.",
                                                    "type": "str"
                                                }
                                            ],
                                            "description": "Information of all active iLO sessions.",
                                            "elements": "dict",
                                            "type": "list"
                                        },
                                        {
                                            "name": "ret",
                                            "description": "Check variable to see if the information was succesfully retrived.",
                                            "type": "bool"
                                        }
                                    ],
                                    "description": "Returns the iLO session msg and whether the function executed successfully.",
                                    "type": "dict"
                                }
                            ],
                            "description": "Returns iLO sessions.",
                            "returned": "always",
                            "type": "dict"
                        }
                    ]
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_oem_utils",
                "content_type": "module_utils",
                "doc_strings": null,
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "ilo_redfish_utils",
                "content_type": "module_utils",
                "doc_strings": null,
                "readme_file": null,
                "readme_html": null
            }
        ]
    },
    "contents": [
        {
            "name": "systeminven",
            "content_type": "role",
            "description": "Stores all the System inventory information of the system in a JSON output file"
        },
        {
            "name": "verify_logical_drives",
            "content_type": "role",
            "description": "Verifying logical drives details in a given server"
        },
        {
            "name": "powerreboot",
            "content_type": "role",
            "description": "Restarts all iLO systems."
        },
        {
            "name": "delete_all_snmp_alert_destinations",
            "content_type": "role",
            "description": "Deletes all SNMP alert destinations in a given server"
        },
        {
            "name": "settimezone",
            "content_type": "role",
            "description": "Set the timezone for the iLO network"
        },
        {
            "name": "creatoutput",
            "content_type": "role",
            "description": "Creates a json file on the local system in order to store information."
        },
        {
            "name": "getvirtmediainfo",
            "content_type": "role",
            "description": "Stores all the Virtual media information of the system in a JSON output file"
        },
        {
            "name": "setonetimeboot",
            "content_type": "role",
            "description": "Sets a one time boot to the mentioned bootdevice"
        },
        {
            "name": "setbiosdefault",
            "content_type": "role",
            "description": "Sets the values of all bios attributes to default values"
        },
        {
            "name": "getmnicinven",
            "content_type": "role",
            "description": "Stores all the manager NIC logs in a JSON output file"
        },
        {
            "name": "delete_ilo_backup_files",
            "content_type": "role",
            "description": "Deletes iLO backup files if present on a given server"
        },
        {
            "name": "getchasspower",
            "content_type": "role",
            "description": "Stores power information about the Chassis in a JSON Output file"
        },
        {
            "name": "getstgctrlinv",
            "content_type": "role",
            "description": "Stores all the Storage inventory information of the system in a JSON output file"
        },
        {
            "name": "get_network_adapter_details",
            "content_type": "role",
            "description": "Retrives the physical network adapter details from a given server"
        },
        {
            "name": "updateusername",
            "content_type": "role",
            "description": "Updates the user name"
        },
        {
            "name": "logout",
            "content_type": "role",
            "description": "Deletes the mentioned session"
        },
        {
            "name": "enable_certificate_login",
            "content_type": "role",
            "description": "Enables certificate login a given server"
        },
        {
            "name": "getfirminven",
            "content_type": "role",
            "description": "Stores all the Firmware inventory information of the system in a JSON output file"
        },
        {
            "name": "getmeminven",
            "content_type": "role",
            "description": "Stores all the Memory information of the system in a JSON output file"
        },
        {
            "name": "changbiosattr",
            "content_type": "role",
            "description": "Changes the value of a mentioned bios attribute."
        },
        {
            "name": "getallsysinven",
            "content_type": "role",
            "description": "Stores all the System information of the system in a JSON output file"
        },
        {
            "name": "getiellogs",
            "content_type": "role",
            "description": "Stores all the manager logs in a JSON output file"
        },
        {
            "name": "rlcpinstall",
            "content_type": "role",
            "description": "Copy and install package on remote machine"
        },
        {
            "name": "delete_volumes",
            "content_type": "role",
            "description": "Deletes volumes specified by volume IDs on a given server"
        },
        {
            "name": "getdiskinven",
            "content_type": "role",
            "description": "Stores all the Disk inventory information of the system in a JSON output file"
        },
        {
            "name": "get_bios_registries",
            "content_type": "role",
            "description": "This module will get BIOS registries from a given server"
        },
        {
            "name": "wait_for_ilo_reboot_completion",
            "content_type": "role",
            "description": "Waits till the iLO completes rebooting"
        },
        {
            "name": "iloreset",
            "content_type": "role",
            "description": "Restart the manager"
        },
        {
            "name": "getbootorder",
            "content_type": "role",
            "description": "Stores information about boot order in a JSON output file"
        },
        {
            "name": "get_manager_inventory",
            "content_type": "role",
            "description": "Get Manager inventory"
        },
        {
            "name": "get_firmware_status",
            "content_type": "role",
            "description": "Retrives firmware status from a given iLO"
        },
        {
            "name": "getdefsysinv",
            "content_type": "role",
            "description": "Stores all the System information of the system in a JSON output file"
        },
        {
            "name": "get_software_inventory",
            "content_type": "role",
            "description": "Get software inventory of the server"
        },
        {
            "name": "deluser",
            "content_type": "role",
            "description": "your role description"
        },
        {
            "name": "listallusers",
            "content_type": "role",
            "description": "Stores information of all users of the iLO in a JSON output file"
        },
        {
            "name": "ilo_factory_reset",
            "content_type": "role",
            "description": "Performs factory reset on a given server"
        },
        {
            "name": "get_boot_settings",
            "content_type": "role",
            "description": "get boot settings of the server"
        },
        {
            "name": "delete_all_logical_drives",
            "content_type": "role",
            "description": "Deletes all the logical drives in a given server"
        },
        {
            "name": "cleariellogs",
            "content_type": "role",
            "description": "Clears all manager logs"
        },
        {
            "name": "set_cold_boot",
            "content_type": "role",
            "description": "Performs cold boot on a given server"
        },
        {
            "name": "getchassistherm",
            "content_type": "role",
            "description": "Stores thermal information about the Chassis in a JSON Output file"
        },
        {
            "name": "update_firmware_through_install_set",
            "content_type": "role",
            "description": "Performs firmware update through install set on a given iLO"
        },
        {
            "name": "get_host_interfaces",
            "content_type": "role",
            "description": "Get host interfaces"
        },
        {
            "name": "getchassinven",
            "content_type": "role",
            "description": "Stores inventory information about the Chassis in a JSON Output file"
        },
        {
            "name": "uploadcomp",
            "content_type": "role",
            "description": "Upload and Flash firware onto the server"
        },
        {
            "name": "ledoff",
            "content_type": "role",
            "description": "Switches off the Chassis indicator"
        },
        {
            "name": "get_usb_info",
            "content_type": "role",
            "description": "Retrives the USB information from a given server"
        },
        {
            "name": "map_user_certificate",
            "content_type": "role",
            "description": "Maps a Certificate to a specified User on a given server"
        },
        {
            "name": "get_device_inventory_info",
            "content_type": "role",
            "description": "Retrives device inventory information from a given server"
        },
        {
            "name": "updatepass",
            "content_type": "role",
            "description": "Updates the password of a user"
        },
        {
            "name": "get_snmpv3_users",
            "content_type": "role",
            "description": "This module will get SNMPv3 users from a given server"
        },
        {
            "name": "getvolumeinven",
            "content_type": "role",
            "description": "Stores all the volume inventory information of the system in a JSON output file"
        },
        {
            "name": "get_logical_drives",
            "content_type": "role",
            "description": "Retrives logical drives details from a given server"
        },
        {
            "name": "ledon",
            "content_type": "role",
            "description": "Switches on the Chassis indicator"
        },
        {
            "name": "systemreboot",
            "content_type": "role",
            "description": "Set the Domain name for the iLO network"
        },
        {
            "name": "delete_all_snmpv3_users",
            "content_type": "role",
            "description": "Deletes all SNMPv3 Users in a given server"
        },
        {
            "name": "getfaninven",
            "content_type": "role",
            "description": "Stores all the Fan inventory information of the system in a JSON output file"
        },
        {
            "name": "create_snmp_alert_destinations",
            "content_type": "role",
            "description": "Creates snmp alerts on a server"
        },
        {
            "name": "check_user_privileges",
            "content_type": "role",
            "description": "Checks privileges of a user on a given server"
        },
        {
            "name": "getfirmupdate",
            "content_type": "role",
            "description": "Stores all the Firmware update methods inventory information of the system in a JSON output file"
        },
        {
            "name": "powergracefullshutdown",
            "content_type": "role",
            "description": "Shuts all iLO systems down"
        },
        {
            "name": "get_network_protocols",
            "content_type": "role",
            "description": "Get Netowork protocols"
        },
        {
            "name": "get_snmp_alert_destinations",
            "content_type": "role",
            "description": "This module will get SNMP alert destinations from a given server"
        },
        {
            "name": "adduser",
            "content_type": "role",
            "description": "Adds new iLO user"
        },
        {
            "name": "confighostname",
            "content_type": "role",
            "description": "Configure the hostname of an iLO network"
        },
        {
            "name": "getsessions",
            "content_type": "role",
            "description": "Stores all the Session information of the system in a JSON output file"
        },
        {
            "name": "flashfwpkg",
            "content_type": "role",
            "description": "Upload and Flash firware onto the server"
        },
        {
            "name": "get_hostname",
            "content_type": "role",
            "description": "Retrieves Hostname from a given server"
        },
        {
            "name": "create_volume",
            "content_type": "role",
            "description": "Creates a volume on a given iLO6 server"
        },
        {
            "name": "set_secure_boot",
            "content_type": "role",
            "description": "Sets Secure Boot on a given server"
        },
        {
            "name": "get_drive_operating_mode",
            "content_type": "role",
            "description": "Retrives drive operating mode from a given server"
        },
        {
            "name": "set_spdm_settings",
            "content_type": "role",
            "description": "Set SPDM settings on a given server"
        },
        {
            "name": "ilo_restore",
            "content_type": "role",
            "description": "Performs iLO restore operation on a given server"
        },
        {
            "name": "getbiosattr",
            "content_type": "role",
            "description": "Stores information about all bios attribures in a JSON output file"
        },
        {
            "name": "getpsuinven",
            "content_type": "role",
            "description": "Stores all the PSU inventory information of the system in a JSON output file"
        },
        {
            "name": "poweron",
            "content_type": "role",
            "description": "Switches ON all iLO systems"
        },
        {
            "name": "get_trusted_ca_certificates",
            "content_type": "role",
            "description": "Retrives Trusted CA Certificates from a given server"
        },
        {
            "name": "create_logical_drives_with_particular_physical_drives",
            "content_type": "role",
            "description": "Creates logical drives with particular physical drives on a given server"
        },
        {
            "name": "getbootoverride",
            "content_type": "role",
            "description": "Stores information about boot override in a JSON output file"
        },
        {
            "name": "get_server_poststate",
            "content_type": "role",
            "description": "Retrieves server PostState from a given server"
        },
        {
            "name": "get_health_report",
            "content_type": "role",
            "description": "Get health report"
        },
        {
            "name": "powerforceoff",
            "content_type": "role",
            "description": "Force power off on all iLO systems"
        },
        {
            "name": "create_snmpv3_users",
            "content_type": "role",
            "description": "creates snmpv3 users on a server"
        },
        {
            "name": "update_snmpv3_users",
            "content_type": "role",
            "description": "Updates SNMPv3 users"
        },
        {
            "name": "get_ilo_backup_files",
            "content_type": "role",
            "description": "Retrives iLO backup files from a given server"
        },
        {
            "name": "verify_uefi_boot_order",
            "content_type": "role",
            "description": "This module will verify if the input boot order matches with the server boot order or not when BiosMode is Uefi"
        },
        {
            "name": "get_specified_logical_drives",
            "content_type": "role",
            "description": "Retrives specified logical drives details from a given server"
        },
        {
            "name": "verify_bios_attributes",
            "content_type": "role",
            "description": "Verify bios attributes is to verify applied bios attributes in the server"
        },
        {
            "name": "smartcompinstall",
            "content_type": "role",
            "description": "Install Smart Component on remote host"
        },
        {
            "name": "get_physical_drives",
            "content_type": "role",
            "description": "Retrives the Physical drives from a given server"
        },
        {
            "name": "ilo_backup",
            "content_type": "role",
            "description": "Performs iLO backup operation on a given server"
        },
        {
            "name": "get_pci_device_details",
            "content_type": "role",
            "description": "Retrives the PCI device details from a given server"
        },
        {
            "name": "firmware_upload",
            "content_type": "role",
            "description": "Uploads a firmware image to the reposistory on a given iLO"
        },
        {
            "name": "create_logical_drives",
            "content_type": "role",
            "description": "Creates logical drives on a given server"
        },
        {
            "name": "update_firmware_with_upload",
            "content_type": "role",
            "description": "Performs firmware update after uploading the firmware image to the firmware repository on a given iLO"
        },
        {
            "name": "getcpuinven",
            "content_type": "role",
            "description": "Stores all the CPU inventory information of the system in a JSON output file"
        },
        {
            "name": "erase_physical_drives",
            "content_type": "role",
            "description": "Erases physical drives on a given server"
        },
        {
            "name": "verify_specified_logical_drives",
            "content_type": "role",
            "description": "Verifying specified logical drives details in a given server"
        },
        {
            "name": "copyresulttoop",
            "content_type": "role",
            "description": "Copies the results returned by another task into a json file."
        },
        {
            "name": "import_trusted_ca",
            "content_type": "role",
            "description": "Imports Trusted CA Certificate on given server"
        },
        {
            "name": "delete_specified_snmpv3_users",
            "content_type": "role",
            "description": "Deletes specified SNMPv3 Users in a given server"
        },
        {
            "name": "setdns",
            "content_type": "role",
            "description": "Set DNS IP for the iLO network"
        },
        {
            "name": "setdomainname",
            "content_type": "role",
            "description": "Set the Domain name for the iLO network"
        },
        {
            "name": "setntpservers",
            "content_type": "role",
            "description": "Set the NTP Servers for the iLO network"
        },
        {
            "name": "disablewinsreg",
            "content_type": "role",
            "description": "Disable WINS registraton of an iLO network"
        },
        {
            "name": "delete_specified_logical_drives",
            "content_type": "role",
            "description": "Deletes specified logical drives in a given server"
        },
        {
            "name": "getnicinven",
            "content_type": "role",
            "description": "Stores all the NIC inventory information of the system in a JSON output file"
        },
        {
            "name": "updaterole",
            "content_type": "role",
            "description": "your role description"
        },
        {
            "name": "login",
            "content_type": "role",
            "description": "Creates and returns a session id from the user login"
        },
        {
            "name": "get_pci_slot_details",
            "content_type": "role",
            "description": "Retrives the PCI slot details from a given server"
        },
        {
            "name": "ilo_power",
            "content_type": "module",
            "description": "Performs Power related operations on iLO using Redfish APIs"
        },
        {
            "name": "ilo_snmp",
            "content_type": "module",
            "description": "Performs SNMP related operations on iLO using Redfish APIs"
        },
        {
            "name": "ilo_device",
            "content_type": "module",
            "description": "Performs Device related operations on iLO using Redfish APIs"
        },
        {
            "name": "ilo_redfish_config",
            "content_type": "module",
            "description": "Sets or updates configuration attributes on HPE iLO with Redfish OEM extensions"
        },
        {
            "name": "ilo_fwupdate_command",
            "content_type": "module",
            "description": "Sets or updates configuration attributes on HPE iLO with Redfish OEM extensions"
        },
        {
            "name": "ilo_boot",
            "content_type": "module",
            "description": "Performs Boot related operations on iLO using Redfish APIs"
        },
        {
            "name": "ilo_security",
            "content_type": "module",
            "description": "Performs Security related operations on iLO using Redfish APIs"
        },
        {
            "name": "ilo_storage",
            "content_type": "module",
            "description": "Performs Storage related operations on iLO using Redfish APIs"
        },
        {
            "name": "ilo_redfish_command",
            "content_type": "module",
            "description": "Sets or updates configuration attributes on HPE iLO with Redfish OEM extensions"
        },
        {
            "name": "ilo_firmware",
            "content_type": "module",
            "description": "Performs Firmware related operations on iLO using Redfish APIs"
        },
        {
            "name": "ilo_manage",
            "content_type": "module",
            "description": "Performs Management related operations on iLO using Redfish APIs"
        },
        {
            "name": "ilo_network",
            "content_type": "module",
            "description": "Performs Network related operations on iLO using Redfish APIs"
        },
        {
            "name": "ilo_redfish_info",
            "content_type": "module",
            "description": "Gathers server information through iLO using Redfish APIs"
        },
        {
            "name": "ilo_oem_utils",
            "content_type": "module_utils",
            "description": null
        },
        {
            "name": "ilo_redfish_utils",
            "content_type": "module_utils",
            "description": null
        }
    ],
    "custom_license": null,
    "requires_ansible": ">=2.15"
}