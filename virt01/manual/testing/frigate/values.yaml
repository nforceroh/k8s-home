
frigate:
  image:
    # -- Docker registry/repository to pull the image from
    repository: ghcr.io/blakeblackshear/frigate
    # -- Overrides the default tag (appVersion) used in Chart.yaml ([Docker Hub](https://hub.docker.com/r/blakeblackshear/frigate/tags?page=1))
    tag: stable-tensorrt
  gpu:
    nvidia:
      # -- Enables NVIDIA GPU compatibility. Must also use the "amd64nvidia" tagged image
      enabled: true
      runtimeClassName: nvidia
  ingress:
    # -- Enables the use of an Ingress Controller to front the Service and can provide HTTPS
    enabled: true    
    ingressClassName: "traefik"
    annotations:
      cert-manager.io/cluster-issuer: "nf-lab"
      cert-manager.io/private-key-rotation-policy: "Always"
      traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      external-dns.alpha.kubernetes.io/target: "traefik.k3s.nf.lab"
    hosts:
      - host: "frigate.k3s.nf.lab"
        paths:
          - path: '/'
            portName: http

    tls:
      - secretName: "frigate-tls"
        hosts:
          - "frigate.k3s.nf.lab"

    config:
      # -- Enables persistence for the config directory
      enabled: true        
      skipuninstall: false
    media:
      # -- Enables persistence for the media directory
      enabled: true        
      skipuninstall: false    
      size: 10Gi
  config: |
    mqtt:
      # Required: host name
      host: mqtt.k3s.nf.lab
      # Optional: port (default: shown below)
      port: 1883
      # Optional: topic prefix (default: shown below)
      # WARNING: must be unique if you are running multiple instances
      topic_prefix: frigate
      # Optional: client id (default: shown below)
      # WARNING: must be unique if you are running multiple instances
      client_id: frigate
      # Optional: user
      #user: mqtt_user
      # Optional: password
      # NOTE: Environment variables that begin with 'FRIGATE_' may be referenced in {}.
      #       eg. password: '{FRIGATE_MQTT_PASSWORD}'
      #password: password
      # Optional: interval in seconds for publishing stats (default: shown below)
      stats_interval: 60

    go2rtc:
      ffmpeg:
        bin: ffmpeg
        volume: "-af \"volume=30dB\"" 
      streams:
        #Wyze
        LivingRoom:
          - rtsp://10.40.1.42:8554/1080p?mp4
          - ffmpeg:LivingRoom#audio=opus
        LivingRoom_sub:
          - rtsp://10.40.1.42:8554/360p?mp4
          - ffmpeg:LivingRoom#audio=opus
        FrontPorch:
          - rtsp://10.40.1.22:8554/1080p?mp4
          - ffmpeg:FrontPorch#audio=opus
        FrontPorch_sub:
          - rtsp://10.40.1.22:8554/360p?mp4
          - ffmpeg:FrontPorch#audio=opus
        BunCam:
          - rtsp://10.40.1.19:8554/1080p?mp4
          - ffmpeg:BunCam#audio=opus
        BunCam_sub:
          - rtsp://10.40.1.19:8554/360p?mp4
          - ffmpeg:BunCam#audio=opus
        Kitchen:
          - rtsp://scrypted-rtsp-svc:33759/75e57ba83105f666
          - ffmpeg:Kitchen#audio=opus
        Kitchen_sub:
          - rtsp://scrypted-rtsp-svc:33759/31e5716887d9312a
          - ffmpeg:Kitchen#audio=opus
        SittingRoom:
          - rtsp://scrypted-rtsp-svc:40123/0646b22eadf4d50a
          - ffmpeg:SittingRoom#audio=opus
        SittingRoom_sub:
          - rtsp://scrypted-rtsp-svc:40123/91389e5f43812d1a
          - ffmpeg:SittingRoom#audio=opus
    snapshots:
      enabled: true 

    live:
      quality: 2

    birdseye:
      enabled: false

    objects:
      track:
      - person
      - car

    # model:
    #   model_type: yolonas
    #   width: 1280 # <--- should match whatever was set in notebook
    #   height: 720 # <--- should match whatever was set in notebook
    #   input_pixel_format: bgr
    #   input_tensor: nchw
    #   path: /config/yolo_nas_s.onnx
    #   labelmap_path: /labelmap/coco-80.txt

    # detectors:
    #   onnx_0:
    #     type: onnx

    cameras:
      # Name of your camera
      LivingRoom:
        enabled: True
        ffmpeg:
          inputs:
            - path: rtsp://127.0.0.1:8554/LivingRoom
              input_args: preset-rtsp-restream
              roles:
                - audio
                - record
            - path: rtsp://127.0.0.1:8554/LivingRoom_sub
              input_args: preset-rtsp-restream
              roles:
                - detect
        mqtt:
          enabled: true
          timestamp: false
          bounding_box: false
          crop: true
          height: 720
          quality: 70
      FrontPorch:
        enabled: True
        ffmpeg:
          inputs:
            - path: rtsp://127.0.0.1:8554/FrontPorch
              input_args: preset-rtsp-restream
              roles:
                - audio
                - record
            - path: rtsp://127.0.0.1:8554/FrontPorch_sub
              input_args: preset-rtsp-restream
              roles:
                - detect
      BunCam:
        enabled: True
        ffmpeg:
          inputs:
            - path: rtsp://127.0.0.1:8554/BunCam
              input_args: preset-rtsp-restream
              roles:
                - audio
                - record
            - path: rtsp://127.0.0.1:8554/BunCam_sub
              input_args: preset-rtsp-restream
              roles:
                - detect
      Kitchen:
        enabled: True
        ffmpeg:
          inputs:
            - path: rtsp://127.0.0.1:8554/Kitchen
              input_args: preset-rtsp-restream
              roles:
                - audio
                - record
            - path: rtsp://127.0.0.1:8554/Kitchen_sub
              input_args: preset-rtsp-restream
              roles:
                - detect
      SittingRoom:
        enabled: True
        ffmpeg:
          inputs:
            - path: rtsp://127.0.0.1:8554/SittingRoom
              input_args: preset-rtsp-restream
              roles:
                - audio
                - record
            - path: rtsp://127.0.0.1:8554/SittingRoom_sub
              input_args: preset-rtsp-restream
              roles:
                - detect

    telemetry:
      # Optional: Enabled network interfaces for bandwidth stats monitoring (default: empty list, let nethogs search all)
      network_interfaces:
        - eth
        - enp
        - eno
        - ens
        - wl
        - lo
      # Optional: Configure system stats
      stats:
        network_bandwidth: true
      # Optional: Enable the latest version outbound check (default: shown below)
      # NOTE: If you use the Home Assistant integration, disabling this will prevent it from reporting new versions
      version_check: True              